circuit BidirectionalTester3DTabulate :
  module TabulateModuleTester :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<1>("h1") @[Vec.scala 198:11]

  module TabulateModuleTester_1 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h2") @[Vec.scala 198:11]

  module TabulateModuleTester_2 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h3") @[Vec.scala 198:11]

  module TabulateModuleTester_3 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_4 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h2") @[Vec.scala 198:11]

  module TabulateModuleTester_5 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h3") @[Vec.scala 198:11]

  module TabulateModuleTester_6 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_7 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_8 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h3") @[Vec.scala 198:11]

  module TabulateModuleTester_9 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_10 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_11 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_12 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_13 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_14 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_15 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_16 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h2") @[Vec.scala 198:11]

  module TabulateModuleTester_17 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h3") @[Vec.scala 198:11]

  module TabulateModuleTester_18 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_19 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_20 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h3") @[Vec.scala 198:11]

  module TabulateModuleTester_21 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_22 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_23 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_24 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_25 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_26 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_27 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_28 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_29 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_30 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_31 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h8") @[Vec.scala 198:11]

  module TabulateModuleTester_32 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<2>("h3") @[Vec.scala 198:11]

  module TabulateModuleTester_33 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_34 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_35 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_36 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_37 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_38 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_39 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_40 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_41 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_42 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_43 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h8") @[Vec.scala 198:11]

  module TabulateModuleTester_44 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_45 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_46 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h8") @[Vec.scala 198:11]

  module TabulateModuleTester_47 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h9") @[Vec.scala 198:11]

  module TabulateModuleTester_48 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h4") @[Vec.scala 198:11]

  module TabulateModuleTester_49 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_50 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_51 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_52 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h5") @[Vec.scala 198:11]

  module TabulateModuleTester_53 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_54 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_55 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h8") @[Vec.scala 198:11]

  module TabulateModuleTester_56 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h6") @[Vec.scala 198:11]

  module TabulateModuleTester_57 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_58 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h8") @[Vec.scala 198:11]

  module TabulateModuleTester_59 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h9") @[Vec.scala 198:11]

  module TabulateModuleTester_60 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<3>("h7") @[Vec.scala 198:11]

  module TabulateModuleTester_61 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h8") @[Vec.scala 198:11]

  module TabulateModuleTester_62 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("h9") @[Vec.scala 198:11]

  module TabulateModuleTester_63 :
    input clock : Clock
    input reset : Reset
    input io : { flip in : UInt<32>, out : UInt<32>}

    io.in <= UInt<4>("ha") @[Vec.scala 198:11]

  module PassthroughModule :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_4 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_5 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_6 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_7 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_8 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_9 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_10 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_11 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_12 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_13 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_14 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_15 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_16 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_17 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_18 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_19 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_20 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_21 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_22 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_23 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_24 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_25 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_26 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_27 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_28 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_29 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_30 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_31 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_32 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_33 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_34 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_35 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_36 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_37 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_38 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_39 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_40 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_41 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_42 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_43 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_44 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_45 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_46 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_47 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_48 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_49 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_50 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_51 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_52 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_53 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_54 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_55 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_56 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_57 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_58 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_59 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_60 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_61 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_62 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module PassthroughModule_63 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : UInt<32>, out : UInt<32>}

    io.out <= io.in @[Util.scala 19:10]

  module BidirectionalTester3DTabulate :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    inst TabulateModuleTester of TabulateModuleTester @[Vec.scala 217:64]
    TabulateModuleTester.clock <= clock
    TabulateModuleTester.reset <= reset
    inst TabulateModuleTester_1 of TabulateModuleTester_1 @[Vec.scala 217:64]
    TabulateModuleTester_1.clock <= clock
    TabulateModuleTester_1.reset <= reset
    inst TabulateModuleTester_2 of TabulateModuleTester_2 @[Vec.scala 217:64]
    TabulateModuleTester_2.clock <= clock
    TabulateModuleTester_2.reset <= reset
    inst TabulateModuleTester_3 of TabulateModuleTester_3 @[Vec.scala 217:64]
    TabulateModuleTester_3.clock <= clock
    TabulateModuleTester_3.reset <= reset
    inst TabulateModuleTester_4 of TabulateModuleTester_4 @[Vec.scala 217:64]
    TabulateModuleTester_4.clock <= clock
    TabulateModuleTester_4.reset <= reset
    inst TabulateModuleTester_5 of TabulateModuleTester_5 @[Vec.scala 217:64]
    TabulateModuleTester_5.clock <= clock
    TabulateModuleTester_5.reset <= reset
    inst TabulateModuleTester_6 of TabulateModuleTester_6 @[Vec.scala 217:64]
    TabulateModuleTester_6.clock <= clock
    TabulateModuleTester_6.reset <= reset
    inst TabulateModuleTester_7 of TabulateModuleTester_7 @[Vec.scala 217:64]
    TabulateModuleTester_7.clock <= clock
    TabulateModuleTester_7.reset <= reset
    inst TabulateModuleTester_8 of TabulateModuleTester_8 @[Vec.scala 217:64]
    TabulateModuleTester_8.clock <= clock
    TabulateModuleTester_8.reset <= reset
    inst TabulateModuleTester_9 of TabulateModuleTester_9 @[Vec.scala 217:64]
    TabulateModuleTester_9.clock <= clock
    TabulateModuleTester_9.reset <= reset
    inst TabulateModuleTester_10 of TabulateModuleTester_10 @[Vec.scala 217:64]
    TabulateModuleTester_10.clock <= clock
    TabulateModuleTester_10.reset <= reset
    inst TabulateModuleTester_11 of TabulateModuleTester_11 @[Vec.scala 217:64]
    TabulateModuleTester_11.clock <= clock
    TabulateModuleTester_11.reset <= reset
    inst TabulateModuleTester_12 of TabulateModuleTester_12 @[Vec.scala 217:64]
    TabulateModuleTester_12.clock <= clock
    TabulateModuleTester_12.reset <= reset
    inst TabulateModuleTester_13 of TabulateModuleTester_13 @[Vec.scala 217:64]
    TabulateModuleTester_13.clock <= clock
    TabulateModuleTester_13.reset <= reset
    inst TabulateModuleTester_14 of TabulateModuleTester_14 @[Vec.scala 217:64]
    TabulateModuleTester_14.clock <= clock
    TabulateModuleTester_14.reset <= reset
    inst TabulateModuleTester_15 of TabulateModuleTester_15 @[Vec.scala 217:64]
    TabulateModuleTester_15.clock <= clock
    TabulateModuleTester_15.reset <= reset
    inst TabulateModuleTester_16 of TabulateModuleTester_16 @[Vec.scala 217:64]
    TabulateModuleTester_16.clock <= clock
    TabulateModuleTester_16.reset <= reset
    inst TabulateModuleTester_17 of TabulateModuleTester_17 @[Vec.scala 217:64]
    TabulateModuleTester_17.clock <= clock
    TabulateModuleTester_17.reset <= reset
    inst TabulateModuleTester_18 of TabulateModuleTester_18 @[Vec.scala 217:64]
    TabulateModuleTester_18.clock <= clock
    TabulateModuleTester_18.reset <= reset
    inst TabulateModuleTester_19 of TabulateModuleTester_19 @[Vec.scala 217:64]
    TabulateModuleTester_19.clock <= clock
    TabulateModuleTester_19.reset <= reset
    inst TabulateModuleTester_20 of TabulateModuleTester_20 @[Vec.scala 217:64]
    TabulateModuleTester_20.clock <= clock
    TabulateModuleTester_20.reset <= reset
    inst TabulateModuleTester_21 of TabulateModuleTester_21 @[Vec.scala 217:64]
    TabulateModuleTester_21.clock <= clock
    TabulateModuleTester_21.reset <= reset
    inst TabulateModuleTester_22 of TabulateModuleTester_22 @[Vec.scala 217:64]
    TabulateModuleTester_22.clock <= clock
    TabulateModuleTester_22.reset <= reset
    inst TabulateModuleTester_23 of TabulateModuleTester_23 @[Vec.scala 217:64]
    TabulateModuleTester_23.clock <= clock
    TabulateModuleTester_23.reset <= reset
    inst TabulateModuleTester_24 of TabulateModuleTester_24 @[Vec.scala 217:64]
    TabulateModuleTester_24.clock <= clock
    TabulateModuleTester_24.reset <= reset
    inst TabulateModuleTester_25 of TabulateModuleTester_25 @[Vec.scala 217:64]
    TabulateModuleTester_25.clock <= clock
    TabulateModuleTester_25.reset <= reset
    inst TabulateModuleTester_26 of TabulateModuleTester_26 @[Vec.scala 217:64]
    TabulateModuleTester_26.clock <= clock
    TabulateModuleTester_26.reset <= reset
    inst TabulateModuleTester_27 of TabulateModuleTester_27 @[Vec.scala 217:64]
    TabulateModuleTester_27.clock <= clock
    TabulateModuleTester_27.reset <= reset
    inst TabulateModuleTester_28 of TabulateModuleTester_28 @[Vec.scala 217:64]
    TabulateModuleTester_28.clock <= clock
    TabulateModuleTester_28.reset <= reset
    inst TabulateModuleTester_29 of TabulateModuleTester_29 @[Vec.scala 217:64]
    TabulateModuleTester_29.clock <= clock
    TabulateModuleTester_29.reset <= reset
    inst TabulateModuleTester_30 of TabulateModuleTester_30 @[Vec.scala 217:64]
    TabulateModuleTester_30.clock <= clock
    TabulateModuleTester_30.reset <= reset
    inst TabulateModuleTester_31 of TabulateModuleTester_31 @[Vec.scala 217:64]
    TabulateModuleTester_31.clock <= clock
    TabulateModuleTester_31.reset <= reset
    inst TabulateModuleTester_32 of TabulateModuleTester_32 @[Vec.scala 217:64]
    TabulateModuleTester_32.clock <= clock
    TabulateModuleTester_32.reset <= reset
    inst TabulateModuleTester_33 of TabulateModuleTester_33 @[Vec.scala 217:64]
    TabulateModuleTester_33.clock <= clock
    TabulateModuleTester_33.reset <= reset
    inst TabulateModuleTester_34 of TabulateModuleTester_34 @[Vec.scala 217:64]
    TabulateModuleTester_34.clock <= clock
    TabulateModuleTester_34.reset <= reset
    inst TabulateModuleTester_35 of TabulateModuleTester_35 @[Vec.scala 217:64]
    TabulateModuleTester_35.clock <= clock
    TabulateModuleTester_35.reset <= reset
    inst TabulateModuleTester_36 of TabulateModuleTester_36 @[Vec.scala 217:64]
    TabulateModuleTester_36.clock <= clock
    TabulateModuleTester_36.reset <= reset
    inst TabulateModuleTester_37 of TabulateModuleTester_37 @[Vec.scala 217:64]
    TabulateModuleTester_37.clock <= clock
    TabulateModuleTester_37.reset <= reset
    inst TabulateModuleTester_38 of TabulateModuleTester_38 @[Vec.scala 217:64]
    TabulateModuleTester_38.clock <= clock
    TabulateModuleTester_38.reset <= reset
    inst TabulateModuleTester_39 of TabulateModuleTester_39 @[Vec.scala 217:64]
    TabulateModuleTester_39.clock <= clock
    TabulateModuleTester_39.reset <= reset
    inst TabulateModuleTester_40 of TabulateModuleTester_40 @[Vec.scala 217:64]
    TabulateModuleTester_40.clock <= clock
    TabulateModuleTester_40.reset <= reset
    inst TabulateModuleTester_41 of TabulateModuleTester_41 @[Vec.scala 217:64]
    TabulateModuleTester_41.clock <= clock
    TabulateModuleTester_41.reset <= reset
    inst TabulateModuleTester_42 of TabulateModuleTester_42 @[Vec.scala 217:64]
    TabulateModuleTester_42.clock <= clock
    TabulateModuleTester_42.reset <= reset
    inst TabulateModuleTester_43 of TabulateModuleTester_43 @[Vec.scala 217:64]
    TabulateModuleTester_43.clock <= clock
    TabulateModuleTester_43.reset <= reset
    inst TabulateModuleTester_44 of TabulateModuleTester_44 @[Vec.scala 217:64]
    TabulateModuleTester_44.clock <= clock
    TabulateModuleTester_44.reset <= reset
    inst TabulateModuleTester_45 of TabulateModuleTester_45 @[Vec.scala 217:64]
    TabulateModuleTester_45.clock <= clock
    TabulateModuleTester_45.reset <= reset
    inst TabulateModuleTester_46 of TabulateModuleTester_46 @[Vec.scala 217:64]
    TabulateModuleTester_46.clock <= clock
    TabulateModuleTester_46.reset <= reset
    inst TabulateModuleTester_47 of TabulateModuleTester_47 @[Vec.scala 217:64]
    TabulateModuleTester_47.clock <= clock
    TabulateModuleTester_47.reset <= reset
    inst TabulateModuleTester_48 of TabulateModuleTester_48 @[Vec.scala 217:64]
    TabulateModuleTester_48.clock <= clock
    TabulateModuleTester_48.reset <= reset
    inst TabulateModuleTester_49 of TabulateModuleTester_49 @[Vec.scala 217:64]
    TabulateModuleTester_49.clock <= clock
    TabulateModuleTester_49.reset <= reset
    inst TabulateModuleTester_50 of TabulateModuleTester_50 @[Vec.scala 217:64]
    TabulateModuleTester_50.clock <= clock
    TabulateModuleTester_50.reset <= reset
    inst TabulateModuleTester_51 of TabulateModuleTester_51 @[Vec.scala 217:64]
    TabulateModuleTester_51.clock <= clock
    TabulateModuleTester_51.reset <= reset
    inst TabulateModuleTester_52 of TabulateModuleTester_52 @[Vec.scala 217:64]
    TabulateModuleTester_52.clock <= clock
    TabulateModuleTester_52.reset <= reset
    inst TabulateModuleTester_53 of TabulateModuleTester_53 @[Vec.scala 217:64]
    TabulateModuleTester_53.clock <= clock
    TabulateModuleTester_53.reset <= reset
    inst TabulateModuleTester_54 of TabulateModuleTester_54 @[Vec.scala 217:64]
    TabulateModuleTester_54.clock <= clock
    TabulateModuleTester_54.reset <= reset
    inst TabulateModuleTester_55 of TabulateModuleTester_55 @[Vec.scala 217:64]
    TabulateModuleTester_55.clock <= clock
    TabulateModuleTester_55.reset <= reset
    inst TabulateModuleTester_56 of TabulateModuleTester_56 @[Vec.scala 217:64]
    TabulateModuleTester_56.clock <= clock
    TabulateModuleTester_56.reset <= reset
    inst TabulateModuleTester_57 of TabulateModuleTester_57 @[Vec.scala 217:64]
    TabulateModuleTester_57.clock <= clock
    TabulateModuleTester_57.reset <= reset
    inst TabulateModuleTester_58 of TabulateModuleTester_58 @[Vec.scala 217:64]
    TabulateModuleTester_58.clock <= clock
    TabulateModuleTester_58.reset <= reset
    inst TabulateModuleTester_59 of TabulateModuleTester_59 @[Vec.scala 217:64]
    TabulateModuleTester_59.clock <= clock
    TabulateModuleTester_59.reset <= reset
    inst TabulateModuleTester_60 of TabulateModuleTester_60 @[Vec.scala 217:64]
    TabulateModuleTester_60.clock <= clock
    TabulateModuleTester_60.reset <= reset
    inst TabulateModuleTester_61 of TabulateModuleTester_61 @[Vec.scala 217:64]
    TabulateModuleTester_61.clock <= clock
    TabulateModuleTester_61.reset <= reset
    inst TabulateModuleTester_62 of TabulateModuleTester_62 @[Vec.scala 217:64]
    TabulateModuleTester_62.clock <= clock
    TabulateModuleTester_62.reset <= reset
    inst TabulateModuleTester_63 of TabulateModuleTester_63 @[Vec.scala 217:64]
    TabulateModuleTester_63.clock <= clock
    TabulateModuleTester_63.reset <= reset
    wire vec3D : { flip in : UInt<32>, out : UInt<32>}[4][4][4] @[Vec.scala 217:43]
    TabulateModuleTester.io <= vec3D[0][0][0] @[Vec.scala 217:43]
    TabulateModuleTester_1.io <= vec3D[0][0][1] @[Vec.scala 217:43]
    TabulateModuleTester_2.io <= vec3D[0][0][2] @[Vec.scala 217:43]
    TabulateModuleTester_3.io <= vec3D[0][0][3] @[Vec.scala 217:43]
    TabulateModuleTester_4.io <= vec3D[0][1][0] @[Vec.scala 217:43]
    TabulateModuleTester_5.io <= vec3D[0][1][1] @[Vec.scala 217:43]
    TabulateModuleTester_6.io <= vec3D[0][1][2] @[Vec.scala 217:43]
    TabulateModuleTester_7.io <= vec3D[0][1][3] @[Vec.scala 217:43]
    TabulateModuleTester_8.io <= vec3D[0][2][0] @[Vec.scala 217:43]
    TabulateModuleTester_9.io <= vec3D[0][2][1] @[Vec.scala 217:43]
    TabulateModuleTester_10.io <= vec3D[0][2][2] @[Vec.scala 217:43]
    TabulateModuleTester_11.io <= vec3D[0][2][3] @[Vec.scala 217:43]
    TabulateModuleTester_12.io <= vec3D[0][3][0] @[Vec.scala 217:43]
    TabulateModuleTester_13.io <= vec3D[0][3][1] @[Vec.scala 217:43]
    TabulateModuleTester_14.io <= vec3D[0][3][2] @[Vec.scala 217:43]
    TabulateModuleTester_15.io <= vec3D[0][3][3] @[Vec.scala 217:43]
    TabulateModuleTester_16.io <= vec3D[1][0][0] @[Vec.scala 217:43]
    TabulateModuleTester_17.io <= vec3D[1][0][1] @[Vec.scala 217:43]
    TabulateModuleTester_18.io <= vec3D[1][0][2] @[Vec.scala 217:43]
    TabulateModuleTester_19.io <= vec3D[1][0][3] @[Vec.scala 217:43]
    TabulateModuleTester_20.io <= vec3D[1][1][0] @[Vec.scala 217:43]
    TabulateModuleTester_21.io <= vec3D[1][1][1] @[Vec.scala 217:43]
    TabulateModuleTester_22.io <= vec3D[1][1][2] @[Vec.scala 217:43]
    TabulateModuleTester_23.io <= vec3D[1][1][3] @[Vec.scala 217:43]
    TabulateModuleTester_24.io <= vec3D[1][2][0] @[Vec.scala 217:43]
    TabulateModuleTester_25.io <= vec3D[1][2][1] @[Vec.scala 217:43]
    TabulateModuleTester_26.io <= vec3D[1][2][2] @[Vec.scala 217:43]
    TabulateModuleTester_27.io <= vec3D[1][2][3] @[Vec.scala 217:43]
    TabulateModuleTester_28.io <= vec3D[1][3][0] @[Vec.scala 217:43]
    TabulateModuleTester_29.io <= vec3D[1][3][1] @[Vec.scala 217:43]
    TabulateModuleTester_30.io <= vec3D[1][3][2] @[Vec.scala 217:43]
    TabulateModuleTester_31.io <= vec3D[1][3][3] @[Vec.scala 217:43]
    TabulateModuleTester_32.io <= vec3D[2][0][0] @[Vec.scala 217:43]
    TabulateModuleTester_33.io <= vec3D[2][0][1] @[Vec.scala 217:43]
    TabulateModuleTester_34.io <= vec3D[2][0][2] @[Vec.scala 217:43]
    TabulateModuleTester_35.io <= vec3D[2][0][3] @[Vec.scala 217:43]
    TabulateModuleTester_36.io <= vec3D[2][1][0] @[Vec.scala 217:43]
    TabulateModuleTester_37.io <= vec3D[2][1][1] @[Vec.scala 217:43]
    TabulateModuleTester_38.io <= vec3D[2][1][2] @[Vec.scala 217:43]
    TabulateModuleTester_39.io <= vec3D[2][1][3] @[Vec.scala 217:43]
    TabulateModuleTester_40.io <= vec3D[2][2][0] @[Vec.scala 217:43]
    TabulateModuleTester_41.io <= vec3D[2][2][1] @[Vec.scala 217:43]
    TabulateModuleTester_42.io <= vec3D[2][2][2] @[Vec.scala 217:43]
    TabulateModuleTester_43.io <= vec3D[2][2][3] @[Vec.scala 217:43]
    TabulateModuleTester_44.io <= vec3D[2][3][0] @[Vec.scala 217:43]
    TabulateModuleTester_45.io <= vec3D[2][3][1] @[Vec.scala 217:43]
    TabulateModuleTester_46.io <= vec3D[2][3][2] @[Vec.scala 217:43]
    TabulateModuleTester_47.io <= vec3D[2][3][3] @[Vec.scala 217:43]
    TabulateModuleTester_48.io <= vec3D[3][0][0] @[Vec.scala 217:43]
    TabulateModuleTester_49.io <= vec3D[3][0][1] @[Vec.scala 217:43]
    TabulateModuleTester_50.io <= vec3D[3][0][2] @[Vec.scala 217:43]
    TabulateModuleTester_51.io <= vec3D[3][0][3] @[Vec.scala 217:43]
    TabulateModuleTester_52.io <= vec3D[3][1][0] @[Vec.scala 217:43]
    TabulateModuleTester_53.io <= vec3D[3][1][1] @[Vec.scala 217:43]
    TabulateModuleTester_54.io <= vec3D[3][1][2] @[Vec.scala 217:43]
    TabulateModuleTester_55.io <= vec3D[3][1][3] @[Vec.scala 217:43]
    TabulateModuleTester_56.io <= vec3D[3][2][0] @[Vec.scala 217:43]
    TabulateModuleTester_57.io <= vec3D[3][2][1] @[Vec.scala 217:43]
    TabulateModuleTester_58.io <= vec3D[3][2][2] @[Vec.scala 217:43]
    TabulateModuleTester_59.io <= vec3D[3][2][3] @[Vec.scala 217:43]
    TabulateModuleTester_60.io <= vec3D[3][3][0] @[Vec.scala 217:43]
    TabulateModuleTester_61.io <= vec3D[3][3][1] @[Vec.scala 217:43]
    TabulateModuleTester_62.io <= vec3D[3][3][2] @[Vec.scala 217:43]
    TabulateModuleTester_63.io <= vec3D[3][3][3] @[Vec.scala 217:43]
    inst PassthroughModule of PassthroughModule @[Vec.scala 225:30]
    PassthroughModule.clock <= clock
    PassthroughModule.reset <= reset
    vec3D[0][0][0].out <= PassthroughModule.io.out @[Vec.scala 226:22]
    PassthroughModule.io.in <= vec3D[0][0][0].in @[Vec.scala 226:22]
    node _T = eq(PassthroughModule.io.out, UInt<1>("h1")) @[Vec.scala 227:29]
    node _T_1 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_2 : @[Vec.scala 227:13]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[Vec.scala 227:13]
      node _T_3 = eq(_T, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_3 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf @[Vec.scala 227:13]
    inst PassthroughModule_1 of PassthroughModule_1 @[Vec.scala 225:30]
    PassthroughModule_1.clock <= clock
    PassthroughModule_1.reset <= reset
    vec3D[0][0][1].out <= PassthroughModule_1.io.out @[Vec.scala 226:22]
    PassthroughModule_1.io.in <= vec3D[0][0][1].in @[Vec.scala 226:22]
    node _T_4 = eq(PassthroughModule_1.io.out, UInt<2>("h2")) @[Vec.scala 227:29]
    node _T_5 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_6 : @[Vec.scala 227:13]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[Vec.scala 227:13]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_7 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_1 @[Vec.scala 227:13]
    inst PassthroughModule_2 of PassthroughModule_2 @[Vec.scala 225:30]
    PassthroughModule_2.clock <= clock
    PassthroughModule_2.reset <= reset
    vec3D[0][0][2].out <= PassthroughModule_2.io.out @[Vec.scala 226:22]
    PassthroughModule_2.io.in <= vec3D[0][0][2].in @[Vec.scala 226:22]
    node _T_8 = eq(PassthroughModule_2.io.out, UInt<2>("h3")) @[Vec.scala 227:29]
    node _T_9 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_10 : @[Vec.scala 227:13]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[Vec.scala 227:13]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_11 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_2 @[Vec.scala 227:13]
    inst PassthroughModule_3 of PassthroughModule_3 @[Vec.scala 225:30]
    PassthroughModule_3.clock <= clock
    PassthroughModule_3.reset <= reset
    vec3D[0][0][3].out <= PassthroughModule_3.io.out @[Vec.scala 226:22]
    PassthroughModule_3.io.in <= vec3D[0][0][3].in @[Vec.scala 226:22]
    node _T_12 = eq(PassthroughModule_3.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_13 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_14 : @[Vec.scala 227:13]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[Vec.scala 227:13]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_15 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_3 @[Vec.scala 227:13]
    inst PassthroughModule_4 of PassthroughModule_4 @[Vec.scala 225:30]
    PassthroughModule_4.clock <= clock
    PassthroughModule_4.reset <= reset
    vec3D[0][1][0].out <= PassthroughModule_4.io.out @[Vec.scala 226:22]
    PassthroughModule_4.io.in <= vec3D[0][1][0].in @[Vec.scala 226:22]
    node _T_16 = eq(PassthroughModule_4.io.out, UInt<2>("h2")) @[Vec.scala 227:29]
    node _T_17 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_18 : @[Vec.scala 227:13]
      assert(clock, _T_16, UInt<1>("h1"), "") : assert_4 @[Vec.scala 227:13]
      node _T_19 = eq(_T_16, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_19 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_4 @[Vec.scala 227:13]
    inst PassthroughModule_5 of PassthroughModule_5 @[Vec.scala 225:30]
    PassthroughModule_5.clock <= clock
    PassthroughModule_5.reset <= reset
    vec3D[0][1][1].out <= PassthroughModule_5.io.out @[Vec.scala 226:22]
    PassthroughModule_5.io.in <= vec3D[0][1][1].in @[Vec.scala 226:22]
    node _T_20 = eq(PassthroughModule_5.io.out, UInt<2>("h3")) @[Vec.scala 227:29]
    node _T_21 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_22 : @[Vec.scala 227:13]
      assert(clock, _T_20, UInt<1>("h1"), "") : assert_5 @[Vec.scala 227:13]
      node _T_23 = eq(_T_20, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_23 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_5 @[Vec.scala 227:13]
    inst PassthroughModule_6 of PassthroughModule_6 @[Vec.scala 225:30]
    PassthroughModule_6.clock <= clock
    PassthroughModule_6.reset <= reset
    vec3D[0][1][2].out <= PassthroughModule_6.io.out @[Vec.scala 226:22]
    PassthroughModule_6.io.in <= vec3D[0][1][2].in @[Vec.scala 226:22]
    node _T_24 = eq(PassthroughModule_6.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_25 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_26 : @[Vec.scala 227:13]
      assert(clock, _T_24, UInt<1>("h1"), "") : assert_6 @[Vec.scala 227:13]
      node _T_27 = eq(_T_24, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_27 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_6 @[Vec.scala 227:13]
    inst PassthroughModule_7 of PassthroughModule_7 @[Vec.scala 225:30]
    PassthroughModule_7.clock <= clock
    PassthroughModule_7.reset <= reset
    vec3D[0][1][3].out <= PassthroughModule_7.io.out @[Vec.scala 226:22]
    PassthroughModule_7.io.in <= vec3D[0][1][3].in @[Vec.scala 226:22]
    node _T_28 = eq(PassthroughModule_7.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_29 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_30 : @[Vec.scala 227:13]
      assert(clock, _T_28, UInt<1>("h1"), "") : assert_7 @[Vec.scala 227:13]
      node _T_31 = eq(_T_28, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_31 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_7 @[Vec.scala 227:13]
    inst PassthroughModule_8 of PassthroughModule_8 @[Vec.scala 225:30]
    PassthroughModule_8.clock <= clock
    PassthroughModule_8.reset <= reset
    vec3D[0][2][0].out <= PassthroughModule_8.io.out @[Vec.scala 226:22]
    PassthroughModule_8.io.in <= vec3D[0][2][0].in @[Vec.scala 226:22]
    node _T_32 = eq(PassthroughModule_8.io.out, UInt<2>("h3")) @[Vec.scala 227:29]
    node _T_33 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_34 = eq(_T_33, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_34 : @[Vec.scala 227:13]
      assert(clock, _T_32, UInt<1>("h1"), "") : assert_8 @[Vec.scala 227:13]
      node _T_35 = eq(_T_32, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_35 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_8 @[Vec.scala 227:13]
    inst PassthroughModule_9 of PassthroughModule_9 @[Vec.scala 225:30]
    PassthroughModule_9.clock <= clock
    PassthroughModule_9.reset <= reset
    vec3D[0][2][1].out <= PassthroughModule_9.io.out @[Vec.scala 226:22]
    PassthroughModule_9.io.in <= vec3D[0][2][1].in @[Vec.scala 226:22]
    node _T_36 = eq(PassthroughModule_9.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_37 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_38 = eq(_T_37, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_38 : @[Vec.scala 227:13]
      assert(clock, _T_36, UInt<1>("h1"), "") : assert_9 @[Vec.scala 227:13]
      node _T_39 = eq(_T_36, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_39 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_9 @[Vec.scala 227:13]
    inst PassthroughModule_10 of PassthroughModule_10 @[Vec.scala 225:30]
    PassthroughModule_10.clock <= clock
    PassthroughModule_10.reset <= reset
    vec3D[0][2][2].out <= PassthroughModule_10.io.out @[Vec.scala 226:22]
    PassthroughModule_10.io.in <= vec3D[0][2][2].in @[Vec.scala 226:22]
    node _T_40 = eq(PassthroughModule_10.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_41 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_42 : @[Vec.scala 227:13]
      assert(clock, _T_40, UInt<1>("h1"), "") : assert_10 @[Vec.scala 227:13]
      node _T_43 = eq(_T_40, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_43 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_10 @[Vec.scala 227:13]
    inst PassthroughModule_11 of PassthroughModule_11 @[Vec.scala 225:30]
    PassthroughModule_11.clock <= clock
    PassthroughModule_11.reset <= reset
    vec3D[0][2][3].out <= PassthroughModule_11.io.out @[Vec.scala 226:22]
    PassthroughModule_11.io.in <= vec3D[0][2][3].in @[Vec.scala 226:22]
    node _T_44 = eq(PassthroughModule_11.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_45 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_46 : @[Vec.scala 227:13]
      assert(clock, _T_44, UInt<1>("h1"), "") : assert_11 @[Vec.scala 227:13]
      node _T_47 = eq(_T_44, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_47 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_11 @[Vec.scala 227:13]
    inst PassthroughModule_12 of PassthroughModule_12 @[Vec.scala 225:30]
    PassthroughModule_12.clock <= clock
    PassthroughModule_12.reset <= reset
    vec3D[0][3][0].out <= PassthroughModule_12.io.out @[Vec.scala 226:22]
    PassthroughModule_12.io.in <= vec3D[0][3][0].in @[Vec.scala 226:22]
    node _T_48 = eq(PassthroughModule_12.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_49 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_50 = eq(_T_49, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_50 : @[Vec.scala 227:13]
      assert(clock, _T_48, UInt<1>("h1"), "") : assert_12 @[Vec.scala 227:13]
      node _T_51 = eq(_T_48, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_51 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_12 @[Vec.scala 227:13]
    inst PassthroughModule_13 of PassthroughModule_13 @[Vec.scala 225:30]
    PassthroughModule_13.clock <= clock
    PassthroughModule_13.reset <= reset
    vec3D[0][3][1].out <= PassthroughModule_13.io.out @[Vec.scala 226:22]
    PassthroughModule_13.io.in <= vec3D[0][3][1].in @[Vec.scala 226:22]
    node _T_52 = eq(PassthroughModule_13.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_53 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_54 = eq(_T_53, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_54 : @[Vec.scala 227:13]
      assert(clock, _T_52, UInt<1>("h1"), "") : assert_13 @[Vec.scala 227:13]
      node _T_55 = eq(_T_52, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_55 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_13 @[Vec.scala 227:13]
    inst PassthroughModule_14 of PassthroughModule_14 @[Vec.scala 225:30]
    PassthroughModule_14.clock <= clock
    PassthroughModule_14.reset <= reset
    vec3D[0][3][2].out <= PassthroughModule_14.io.out @[Vec.scala 226:22]
    PassthroughModule_14.io.in <= vec3D[0][3][2].in @[Vec.scala 226:22]
    node _T_56 = eq(PassthroughModule_14.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_57 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_58 = eq(_T_57, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_58 : @[Vec.scala 227:13]
      assert(clock, _T_56, UInt<1>("h1"), "") : assert_14 @[Vec.scala 227:13]
      node _T_59 = eq(_T_56, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_59 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_14 @[Vec.scala 227:13]
    inst PassthroughModule_15 of PassthroughModule_15 @[Vec.scala 225:30]
    PassthroughModule_15.clock <= clock
    PassthroughModule_15.reset <= reset
    vec3D[0][3][3].out <= PassthroughModule_15.io.out @[Vec.scala 226:22]
    PassthroughModule_15.io.in <= vec3D[0][3][3].in @[Vec.scala 226:22]
    node _T_60 = eq(PassthroughModule_15.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_61 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_62 = eq(_T_61, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_62 : @[Vec.scala 227:13]
      assert(clock, _T_60, UInt<1>("h1"), "") : assert_15 @[Vec.scala 227:13]
      node _T_63 = eq(_T_60, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_63 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_15 @[Vec.scala 227:13]
    inst PassthroughModule_16 of PassthroughModule_16 @[Vec.scala 225:30]
    PassthroughModule_16.clock <= clock
    PassthroughModule_16.reset <= reset
    vec3D[1][0][0].out <= PassthroughModule_16.io.out @[Vec.scala 226:22]
    PassthroughModule_16.io.in <= vec3D[1][0][0].in @[Vec.scala 226:22]
    node _T_64 = eq(PassthroughModule_16.io.out, UInt<2>("h2")) @[Vec.scala 227:29]
    node _T_65 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_66 = eq(_T_65, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_66 : @[Vec.scala 227:13]
      assert(clock, _T_64, UInt<1>("h1"), "") : assert_16 @[Vec.scala 227:13]
      node _T_67 = eq(_T_64, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_67 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_16 @[Vec.scala 227:13]
    inst PassthroughModule_17 of PassthroughModule_17 @[Vec.scala 225:30]
    PassthroughModule_17.clock <= clock
    PassthroughModule_17.reset <= reset
    vec3D[1][0][1].out <= PassthroughModule_17.io.out @[Vec.scala 226:22]
    PassthroughModule_17.io.in <= vec3D[1][0][1].in @[Vec.scala 226:22]
    node _T_68 = eq(PassthroughModule_17.io.out, UInt<2>("h3")) @[Vec.scala 227:29]
    node _T_69 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_70 = eq(_T_69, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_70 : @[Vec.scala 227:13]
      assert(clock, _T_68, UInt<1>("h1"), "") : assert_17 @[Vec.scala 227:13]
      node _T_71 = eq(_T_68, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_71 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_17 @[Vec.scala 227:13]
    inst PassthroughModule_18 of PassthroughModule_18 @[Vec.scala 225:30]
    PassthroughModule_18.clock <= clock
    PassthroughModule_18.reset <= reset
    vec3D[1][0][2].out <= PassthroughModule_18.io.out @[Vec.scala 226:22]
    PassthroughModule_18.io.in <= vec3D[1][0][2].in @[Vec.scala 226:22]
    node _T_72 = eq(PassthroughModule_18.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_73 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_74 = eq(_T_73, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_74 : @[Vec.scala 227:13]
      assert(clock, _T_72, UInt<1>("h1"), "") : assert_18 @[Vec.scala 227:13]
      node _T_75 = eq(_T_72, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_75 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_18 @[Vec.scala 227:13]
    inst PassthroughModule_19 of PassthroughModule_19 @[Vec.scala 225:30]
    PassthroughModule_19.clock <= clock
    PassthroughModule_19.reset <= reset
    vec3D[1][0][3].out <= PassthroughModule_19.io.out @[Vec.scala 226:22]
    PassthroughModule_19.io.in <= vec3D[1][0][3].in @[Vec.scala 226:22]
    node _T_76 = eq(PassthroughModule_19.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_77 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_78 = eq(_T_77, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_78 : @[Vec.scala 227:13]
      assert(clock, _T_76, UInt<1>("h1"), "") : assert_19 @[Vec.scala 227:13]
      node _T_79 = eq(_T_76, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_79 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_19 @[Vec.scala 227:13]
    inst PassthroughModule_20 of PassthroughModule_20 @[Vec.scala 225:30]
    PassthroughModule_20.clock <= clock
    PassthroughModule_20.reset <= reset
    vec3D[1][1][0].out <= PassthroughModule_20.io.out @[Vec.scala 226:22]
    PassthroughModule_20.io.in <= vec3D[1][1][0].in @[Vec.scala 226:22]
    node _T_80 = eq(PassthroughModule_20.io.out, UInt<2>("h3")) @[Vec.scala 227:29]
    node _T_81 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_82 = eq(_T_81, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_82 : @[Vec.scala 227:13]
      assert(clock, _T_80, UInt<1>("h1"), "") : assert_20 @[Vec.scala 227:13]
      node _T_83 = eq(_T_80, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_83 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_20 @[Vec.scala 227:13]
    inst PassthroughModule_21 of PassthroughModule_21 @[Vec.scala 225:30]
    PassthroughModule_21.clock <= clock
    PassthroughModule_21.reset <= reset
    vec3D[1][1][1].out <= PassthroughModule_21.io.out @[Vec.scala 226:22]
    PassthroughModule_21.io.in <= vec3D[1][1][1].in @[Vec.scala 226:22]
    node _T_84 = eq(PassthroughModule_21.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_85 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_86 = eq(_T_85, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_86 : @[Vec.scala 227:13]
      assert(clock, _T_84, UInt<1>("h1"), "") : assert_21 @[Vec.scala 227:13]
      node _T_87 = eq(_T_84, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_87 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_21 @[Vec.scala 227:13]
    inst PassthroughModule_22 of PassthroughModule_22 @[Vec.scala 225:30]
    PassthroughModule_22.clock <= clock
    PassthroughModule_22.reset <= reset
    vec3D[1][1][2].out <= PassthroughModule_22.io.out @[Vec.scala 226:22]
    PassthroughModule_22.io.in <= vec3D[1][1][2].in @[Vec.scala 226:22]
    node _T_88 = eq(PassthroughModule_22.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_89 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_90 = eq(_T_89, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_90 : @[Vec.scala 227:13]
      assert(clock, _T_88, UInt<1>("h1"), "") : assert_22 @[Vec.scala 227:13]
      node _T_91 = eq(_T_88, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_91 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_22 @[Vec.scala 227:13]
    inst PassthroughModule_23 of PassthroughModule_23 @[Vec.scala 225:30]
    PassthroughModule_23.clock <= clock
    PassthroughModule_23.reset <= reset
    vec3D[1][1][3].out <= PassthroughModule_23.io.out @[Vec.scala 226:22]
    PassthroughModule_23.io.in <= vec3D[1][1][3].in @[Vec.scala 226:22]
    node _T_92 = eq(PassthroughModule_23.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_93 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_94 = eq(_T_93, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_94 : @[Vec.scala 227:13]
      assert(clock, _T_92, UInt<1>("h1"), "") : assert_23 @[Vec.scala 227:13]
      node _T_95 = eq(_T_92, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_95 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_23 @[Vec.scala 227:13]
    inst PassthroughModule_24 of PassthroughModule_24 @[Vec.scala 225:30]
    PassthroughModule_24.clock <= clock
    PassthroughModule_24.reset <= reset
    vec3D[1][2][0].out <= PassthroughModule_24.io.out @[Vec.scala 226:22]
    PassthroughModule_24.io.in <= vec3D[1][2][0].in @[Vec.scala 226:22]
    node _T_96 = eq(PassthroughModule_24.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_97 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_98 = eq(_T_97, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_98 : @[Vec.scala 227:13]
      assert(clock, _T_96, UInt<1>("h1"), "") : assert_24 @[Vec.scala 227:13]
      node _T_99 = eq(_T_96, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_99 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_24 @[Vec.scala 227:13]
    inst PassthroughModule_25 of PassthroughModule_25 @[Vec.scala 225:30]
    PassthroughModule_25.clock <= clock
    PassthroughModule_25.reset <= reset
    vec3D[1][2][1].out <= PassthroughModule_25.io.out @[Vec.scala 226:22]
    PassthroughModule_25.io.in <= vec3D[1][2][1].in @[Vec.scala 226:22]
    node _T_100 = eq(PassthroughModule_25.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_101 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_102 = eq(_T_101, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_102 : @[Vec.scala 227:13]
      assert(clock, _T_100, UInt<1>("h1"), "") : assert_25 @[Vec.scala 227:13]
      node _T_103 = eq(_T_100, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_103 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_25 @[Vec.scala 227:13]
    inst PassthroughModule_26 of PassthroughModule_26 @[Vec.scala 225:30]
    PassthroughModule_26.clock <= clock
    PassthroughModule_26.reset <= reset
    vec3D[1][2][2].out <= PassthroughModule_26.io.out @[Vec.scala 226:22]
    PassthroughModule_26.io.in <= vec3D[1][2][2].in @[Vec.scala 226:22]
    node _T_104 = eq(PassthroughModule_26.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_105 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_106 = eq(_T_105, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_106 : @[Vec.scala 227:13]
      assert(clock, _T_104, UInt<1>("h1"), "") : assert_26 @[Vec.scala 227:13]
      node _T_107 = eq(_T_104, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_107 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_26 @[Vec.scala 227:13]
    inst PassthroughModule_27 of PassthroughModule_27 @[Vec.scala 225:30]
    PassthroughModule_27.clock <= clock
    PassthroughModule_27.reset <= reset
    vec3D[1][2][3].out <= PassthroughModule_27.io.out @[Vec.scala 226:22]
    PassthroughModule_27.io.in <= vec3D[1][2][3].in @[Vec.scala 226:22]
    node _T_108 = eq(PassthroughModule_27.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_109 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_110 = eq(_T_109, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_110 : @[Vec.scala 227:13]
      assert(clock, _T_108, UInt<1>("h1"), "") : assert_27 @[Vec.scala 227:13]
      node _T_111 = eq(_T_108, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_111 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_27 @[Vec.scala 227:13]
    inst PassthroughModule_28 of PassthroughModule_28 @[Vec.scala 225:30]
    PassthroughModule_28.clock <= clock
    PassthroughModule_28.reset <= reset
    vec3D[1][3][0].out <= PassthroughModule_28.io.out @[Vec.scala 226:22]
    PassthroughModule_28.io.in <= vec3D[1][3][0].in @[Vec.scala 226:22]
    node _T_112 = eq(PassthroughModule_28.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_113 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_114 = eq(_T_113, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_114 : @[Vec.scala 227:13]
      assert(clock, _T_112, UInt<1>("h1"), "") : assert_28 @[Vec.scala 227:13]
      node _T_115 = eq(_T_112, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_115 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_28 @[Vec.scala 227:13]
    inst PassthroughModule_29 of PassthroughModule_29 @[Vec.scala 225:30]
    PassthroughModule_29.clock <= clock
    PassthroughModule_29.reset <= reset
    vec3D[1][3][1].out <= PassthroughModule_29.io.out @[Vec.scala 226:22]
    PassthroughModule_29.io.in <= vec3D[1][3][1].in @[Vec.scala 226:22]
    node _T_116 = eq(PassthroughModule_29.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_117 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_118 = eq(_T_117, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_118 : @[Vec.scala 227:13]
      assert(clock, _T_116, UInt<1>("h1"), "") : assert_29 @[Vec.scala 227:13]
      node _T_119 = eq(_T_116, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_119 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_29 @[Vec.scala 227:13]
    inst PassthroughModule_30 of PassthroughModule_30 @[Vec.scala 225:30]
    PassthroughModule_30.clock <= clock
    PassthroughModule_30.reset <= reset
    vec3D[1][3][2].out <= PassthroughModule_30.io.out @[Vec.scala 226:22]
    PassthroughModule_30.io.in <= vec3D[1][3][2].in @[Vec.scala 226:22]
    node _T_120 = eq(PassthroughModule_30.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_121 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_122 = eq(_T_121, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_122 : @[Vec.scala 227:13]
      assert(clock, _T_120, UInt<1>("h1"), "") : assert_30 @[Vec.scala 227:13]
      node _T_123 = eq(_T_120, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_123 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_30 @[Vec.scala 227:13]
    inst PassthroughModule_31 of PassthroughModule_31 @[Vec.scala 225:30]
    PassthroughModule_31.clock <= clock
    PassthroughModule_31.reset <= reset
    vec3D[1][3][3].out <= PassthroughModule_31.io.out @[Vec.scala 226:22]
    PassthroughModule_31.io.in <= vec3D[1][3][3].in @[Vec.scala 226:22]
    node _T_124 = eq(PassthroughModule_31.io.out, UInt<4>("h8")) @[Vec.scala 227:29]
    node _T_125 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_126 = eq(_T_125, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_126 : @[Vec.scala 227:13]
      assert(clock, _T_124, UInt<1>("h1"), "") : assert_31 @[Vec.scala 227:13]
      node _T_127 = eq(_T_124, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_127 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_31 @[Vec.scala 227:13]
    inst PassthroughModule_32 of PassthroughModule_32 @[Vec.scala 225:30]
    PassthroughModule_32.clock <= clock
    PassthroughModule_32.reset <= reset
    vec3D[2][0][0].out <= PassthroughModule_32.io.out @[Vec.scala 226:22]
    PassthroughModule_32.io.in <= vec3D[2][0][0].in @[Vec.scala 226:22]
    node _T_128 = eq(PassthroughModule_32.io.out, UInt<2>("h3")) @[Vec.scala 227:29]
    node _T_129 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_130 = eq(_T_129, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_130 : @[Vec.scala 227:13]
      assert(clock, _T_128, UInt<1>("h1"), "") : assert_32 @[Vec.scala 227:13]
      node _T_131 = eq(_T_128, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_131 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_32 @[Vec.scala 227:13]
    inst PassthroughModule_33 of PassthroughModule_33 @[Vec.scala 225:30]
    PassthroughModule_33.clock <= clock
    PassthroughModule_33.reset <= reset
    vec3D[2][0][1].out <= PassthroughModule_33.io.out @[Vec.scala 226:22]
    PassthroughModule_33.io.in <= vec3D[2][0][1].in @[Vec.scala 226:22]
    node _T_132 = eq(PassthroughModule_33.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_133 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_134 = eq(_T_133, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_134 : @[Vec.scala 227:13]
      assert(clock, _T_132, UInt<1>("h1"), "") : assert_33 @[Vec.scala 227:13]
      node _T_135 = eq(_T_132, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_135 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_33 @[Vec.scala 227:13]
    inst PassthroughModule_34 of PassthroughModule_34 @[Vec.scala 225:30]
    PassthroughModule_34.clock <= clock
    PassthroughModule_34.reset <= reset
    vec3D[2][0][2].out <= PassthroughModule_34.io.out @[Vec.scala 226:22]
    PassthroughModule_34.io.in <= vec3D[2][0][2].in @[Vec.scala 226:22]
    node _T_136 = eq(PassthroughModule_34.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_137 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_138 = eq(_T_137, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_138 : @[Vec.scala 227:13]
      assert(clock, _T_136, UInt<1>("h1"), "") : assert_34 @[Vec.scala 227:13]
      node _T_139 = eq(_T_136, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_139 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_34 @[Vec.scala 227:13]
    inst PassthroughModule_35 of PassthroughModule_35 @[Vec.scala 225:30]
    PassthroughModule_35.clock <= clock
    PassthroughModule_35.reset <= reset
    vec3D[2][0][3].out <= PassthroughModule_35.io.out @[Vec.scala 226:22]
    PassthroughModule_35.io.in <= vec3D[2][0][3].in @[Vec.scala 226:22]
    node _T_140 = eq(PassthroughModule_35.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_141 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_142 = eq(_T_141, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_142 : @[Vec.scala 227:13]
      assert(clock, _T_140, UInt<1>("h1"), "") : assert_35 @[Vec.scala 227:13]
      node _T_143 = eq(_T_140, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_143 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_35 @[Vec.scala 227:13]
    inst PassthroughModule_36 of PassthroughModule_36 @[Vec.scala 225:30]
    PassthroughModule_36.clock <= clock
    PassthroughModule_36.reset <= reset
    vec3D[2][1][0].out <= PassthroughModule_36.io.out @[Vec.scala 226:22]
    PassthroughModule_36.io.in <= vec3D[2][1][0].in @[Vec.scala 226:22]
    node _T_144 = eq(PassthroughModule_36.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_145 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_146 = eq(_T_145, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_146 : @[Vec.scala 227:13]
      assert(clock, _T_144, UInt<1>("h1"), "") : assert_36 @[Vec.scala 227:13]
      node _T_147 = eq(_T_144, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_147 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_36 @[Vec.scala 227:13]
    inst PassthroughModule_37 of PassthroughModule_37 @[Vec.scala 225:30]
    PassthroughModule_37.clock <= clock
    PassthroughModule_37.reset <= reset
    vec3D[2][1][1].out <= PassthroughModule_37.io.out @[Vec.scala 226:22]
    PassthroughModule_37.io.in <= vec3D[2][1][1].in @[Vec.scala 226:22]
    node _T_148 = eq(PassthroughModule_37.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_149 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_150 = eq(_T_149, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_150 : @[Vec.scala 227:13]
      assert(clock, _T_148, UInt<1>("h1"), "") : assert_37 @[Vec.scala 227:13]
      node _T_151 = eq(_T_148, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_151 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_37 @[Vec.scala 227:13]
    inst PassthroughModule_38 of PassthroughModule_38 @[Vec.scala 225:30]
    PassthroughModule_38.clock <= clock
    PassthroughModule_38.reset <= reset
    vec3D[2][1][2].out <= PassthroughModule_38.io.out @[Vec.scala 226:22]
    PassthroughModule_38.io.in <= vec3D[2][1][2].in @[Vec.scala 226:22]
    node _T_152 = eq(PassthroughModule_38.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_153 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_154 = eq(_T_153, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_154 : @[Vec.scala 227:13]
      assert(clock, _T_152, UInt<1>("h1"), "") : assert_38 @[Vec.scala 227:13]
      node _T_155 = eq(_T_152, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_155 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_38 @[Vec.scala 227:13]
    inst PassthroughModule_39 of PassthroughModule_39 @[Vec.scala 225:30]
    PassthroughModule_39.clock <= clock
    PassthroughModule_39.reset <= reset
    vec3D[2][1][3].out <= PassthroughModule_39.io.out @[Vec.scala 226:22]
    PassthroughModule_39.io.in <= vec3D[2][1][3].in @[Vec.scala 226:22]
    node _T_156 = eq(PassthroughModule_39.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_157 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_158 = eq(_T_157, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_158 : @[Vec.scala 227:13]
      assert(clock, _T_156, UInt<1>("h1"), "") : assert_39 @[Vec.scala 227:13]
      node _T_159 = eq(_T_156, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_159 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_39 @[Vec.scala 227:13]
    inst PassthroughModule_40 of PassthroughModule_40 @[Vec.scala 225:30]
    PassthroughModule_40.clock <= clock
    PassthroughModule_40.reset <= reset
    vec3D[2][2][0].out <= PassthroughModule_40.io.out @[Vec.scala 226:22]
    PassthroughModule_40.io.in <= vec3D[2][2][0].in @[Vec.scala 226:22]
    node _T_160 = eq(PassthroughModule_40.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_161 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_162 = eq(_T_161, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_162 : @[Vec.scala 227:13]
      assert(clock, _T_160, UInt<1>("h1"), "") : assert_40 @[Vec.scala 227:13]
      node _T_163 = eq(_T_160, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_163 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_40 @[Vec.scala 227:13]
    inst PassthroughModule_41 of PassthroughModule_41 @[Vec.scala 225:30]
    PassthroughModule_41.clock <= clock
    PassthroughModule_41.reset <= reset
    vec3D[2][2][1].out <= PassthroughModule_41.io.out @[Vec.scala 226:22]
    PassthroughModule_41.io.in <= vec3D[2][2][1].in @[Vec.scala 226:22]
    node _T_164 = eq(PassthroughModule_41.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_165 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_166 = eq(_T_165, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_166 : @[Vec.scala 227:13]
      assert(clock, _T_164, UInt<1>("h1"), "") : assert_41 @[Vec.scala 227:13]
      node _T_167 = eq(_T_164, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_167 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_41 @[Vec.scala 227:13]
    inst PassthroughModule_42 of PassthroughModule_42 @[Vec.scala 225:30]
    PassthroughModule_42.clock <= clock
    PassthroughModule_42.reset <= reset
    vec3D[2][2][2].out <= PassthroughModule_42.io.out @[Vec.scala 226:22]
    PassthroughModule_42.io.in <= vec3D[2][2][2].in @[Vec.scala 226:22]
    node _T_168 = eq(PassthroughModule_42.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_169 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_170 = eq(_T_169, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_170 : @[Vec.scala 227:13]
      assert(clock, _T_168, UInt<1>("h1"), "") : assert_42 @[Vec.scala 227:13]
      node _T_171 = eq(_T_168, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_171 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_42 @[Vec.scala 227:13]
    inst PassthroughModule_43 of PassthroughModule_43 @[Vec.scala 225:30]
    PassthroughModule_43.clock <= clock
    PassthroughModule_43.reset <= reset
    vec3D[2][2][3].out <= PassthroughModule_43.io.out @[Vec.scala 226:22]
    PassthroughModule_43.io.in <= vec3D[2][2][3].in @[Vec.scala 226:22]
    node _T_172 = eq(PassthroughModule_43.io.out, UInt<4>("h8")) @[Vec.scala 227:29]
    node _T_173 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_174 = eq(_T_173, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_174 : @[Vec.scala 227:13]
      assert(clock, _T_172, UInt<1>("h1"), "") : assert_43 @[Vec.scala 227:13]
      node _T_175 = eq(_T_172, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_175 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_43 @[Vec.scala 227:13]
    inst PassthroughModule_44 of PassthroughModule_44 @[Vec.scala 225:30]
    PassthroughModule_44.clock <= clock
    PassthroughModule_44.reset <= reset
    vec3D[2][3][0].out <= PassthroughModule_44.io.out @[Vec.scala 226:22]
    PassthroughModule_44.io.in <= vec3D[2][3][0].in @[Vec.scala 226:22]
    node _T_176 = eq(PassthroughModule_44.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_177 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_178 = eq(_T_177, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_178 : @[Vec.scala 227:13]
      assert(clock, _T_176, UInt<1>("h1"), "") : assert_44 @[Vec.scala 227:13]
      node _T_179 = eq(_T_176, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_179 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_44 @[Vec.scala 227:13]
    inst PassthroughModule_45 of PassthroughModule_45 @[Vec.scala 225:30]
    PassthroughModule_45.clock <= clock
    PassthroughModule_45.reset <= reset
    vec3D[2][3][1].out <= PassthroughModule_45.io.out @[Vec.scala 226:22]
    PassthroughModule_45.io.in <= vec3D[2][3][1].in @[Vec.scala 226:22]
    node _T_180 = eq(PassthroughModule_45.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_181 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_182 = eq(_T_181, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_182 : @[Vec.scala 227:13]
      assert(clock, _T_180, UInt<1>("h1"), "") : assert_45 @[Vec.scala 227:13]
      node _T_183 = eq(_T_180, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_183 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_45 @[Vec.scala 227:13]
    inst PassthroughModule_46 of PassthroughModule_46 @[Vec.scala 225:30]
    PassthroughModule_46.clock <= clock
    PassthroughModule_46.reset <= reset
    vec3D[2][3][2].out <= PassthroughModule_46.io.out @[Vec.scala 226:22]
    PassthroughModule_46.io.in <= vec3D[2][3][2].in @[Vec.scala 226:22]
    node _T_184 = eq(PassthroughModule_46.io.out, UInt<4>("h8")) @[Vec.scala 227:29]
    node _T_185 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_186 = eq(_T_185, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_186 : @[Vec.scala 227:13]
      assert(clock, _T_184, UInt<1>("h1"), "") : assert_46 @[Vec.scala 227:13]
      node _T_187 = eq(_T_184, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_187 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_46 @[Vec.scala 227:13]
    inst PassthroughModule_47 of PassthroughModule_47 @[Vec.scala 225:30]
    PassthroughModule_47.clock <= clock
    PassthroughModule_47.reset <= reset
    vec3D[2][3][3].out <= PassthroughModule_47.io.out @[Vec.scala 226:22]
    PassthroughModule_47.io.in <= vec3D[2][3][3].in @[Vec.scala 226:22]
    node _T_188 = eq(PassthroughModule_47.io.out, UInt<4>("h9")) @[Vec.scala 227:29]
    node _T_189 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_190 = eq(_T_189, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_190 : @[Vec.scala 227:13]
      assert(clock, _T_188, UInt<1>("h1"), "") : assert_47 @[Vec.scala 227:13]
      node _T_191 = eq(_T_188, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_191 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_47 @[Vec.scala 227:13]
    inst PassthroughModule_48 of PassthroughModule_48 @[Vec.scala 225:30]
    PassthroughModule_48.clock <= clock
    PassthroughModule_48.reset <= reset
    vec3D[3][0][0].out <= PassthroughModule_48.io.out @[Vec.scala 226:22]
    PassthroughModule_48.io.in <= vec3D[3][0][0].in @[Vec.scala 226:22]
    node _T_192 = eq(PassthroughModule_48.io.out, UInt<3>("h4")) @[Vec.scala 227:29]
    node _T_193 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_194 = eq(_T_193, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_194 : @[Vec.scala 227:13]
      assert(clock, _T_192, UInt<1>("h1"), "") : assert_48 @[Vec.scala 227:13]
      node _T_195 = eq(_T_192, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_195 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_48 @[Vec.scala 227:13]
    inst PassthroughModule_49 of PassthroughModule_49 @[Vec.scala 225:30]
    PassthroughModule_49.clock <= clock
    PassthroughModule_49.reset <= reset
    vec3D[3][0][1].out <= PassthroughModule_49.io.out @[Vec.scala 226:22]
    PassthroughModule_49.io.in <= vec3D[3][0][1].in @[Vec.scala 226:22]
    node _T_196 = eq(PassthroughModule_49.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_197 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_198 = eq(_T_197, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_198 : @[Vec.scala 227:13]
      assert(clock, _T_196, UInt<1>("h1"), "") : assert_49 @[Vec.scala 227:13]
      node _T_199 = eq(_T_196, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_199 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_49 @[Vec.scala 227:13]
    inst PassthroughModule_50 of PassthroughModule_50 @[Vec.scala 225:30]
    PassthroughModule_50.clock <= clock
    PassthroughModule_50.reset <= reset
    vec3D[3][0][2].out <= PassthroughModule_50.io.out @[Vec.scala 226:22]
    PassthroughModule_50.io.in <= vec3D[3][0][2].in @[Vec.scala 226:22]
    node _T_200 = eq(PassthroughModule_50.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_201 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_202 = eq(_T_201, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_202 : @[Vec.scala 227:13]
      assert(clock, _T_200, UInt<1>("h1"), "") : assert_50 @[Vec.scala 227:13]
      node _T_203 = eq(_T_200, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_203 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_50 @[Vec.scala 227:13]
    inst PassthroughModule_51 of PassthroughModule_51 @[Vec.scala 225:30]
    PassthroughModule_51.clock <= clock
    PassthroughModule_51.reset <= reset
    vec3D[3][0][3].out <= PassthroughModule_51.io.out @[Vec.scala 226:22]
    PassthroughModule_51.io.in <= vec3D[3][0][3].in @[Vec.scala 226:22]
    node _T_204 = eq(PassthroughModule_51.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_205 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_206 = eq(_T_205, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_206 : @[Vec.scala 227:13]
      assert(clock, _T_204, UInt<1>("h1"), "") : assert_51 @[Vec.scala 227:13]
      node _T_207 = eq(_T_204, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_207 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_51 @[Vec.scala 227:13]
    inst PassthroughModule_52 of PassthroughModule_52 @[Vec.scala 225:30]
    PassthroughModule_52.clock <= clock
    PassthroughModule_52.reset <= reset
    vec3D[3][1][0].out <= PassthroughModule_52.io.out @[Vec.scala 226:22]
    PassthroughModule_52.io.in <= vec3D[3][1][0].in @[Vec.scala 226:22]
    node _T_208 = eq(PassthroughModule_52.io.out, UInt<3>("h5")) @[Vec.scala 227:29]
    node _T_209 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_210 = eq(_T_209, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_210 : @[Vec.scala 227:13]
      assert(clock, _T_208, UInt<1>("h1"), "") : assert_52 @[Vec.scala 227:13]
      node _T_211 = eq(_T_208, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_211 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_52 @[Vec.scala 227:13]
    inst PassthroughModule_53 of PassthroughModule_53 @[Vec.scala 225:30]
    PassthroughModule_53.clock <= clock
    PassthroughModule_53.reset <= reset
    vec3D[3][1][1].out <= PassthroughModule_53.io.out @[Vec.scala 226:22]
    PassthroughModule_53.io.in <= vec3D[3][1][1].in @[Vec.scala 226:22]
    node _T_212 = eq(PassthroughModule_53.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_213 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_214 = eq(_T_213, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_214 : @[Vec.scala 227:13]
      assert(clock, _T_212, UInt<1>("h1"), "") : assert_53 @[Vec.scala 227:13]
      node _T_215 = eq(_T_212, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_215 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_53 @[Vec.scala 227:13]
    inst PassthroughModule_54 of PassthroughModule_54 @[Vec.scala 225:30]
    PassthroughModule_54.clock <= clock
    PassthroughModule_54.reset <= reset
    vec3D[3][1][2].out <= PassthroughModule_54.io.out @[Vec.scala 226:22]
    PassthroughModule_54.io.in <= vec3D[3][1][2].in @[Vec.scala 226:22]
    node _T_216 = eq(PassthroughModule_54.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_217 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_218 = eq(_T_217, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_218 : @[Vec.scala 227:13]
      assert(clock, _T_216, UInt<1>("h1"), "") : assert_54 @[Vec.scala 227:13]
      node _T_219 = eq(_T_216, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_219 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_54 @[Vec.scala 227:13]
    inst PassthroughModule_55 of PassthroughModule_55 @[Vec.scala 225:30]
    PassthroughModule_55.clock <= clock
    PassthroughModule_55.reset <= reset
    vec3D[3][1][3].out <= PassthroughModule_55.io.out @[Vec.scala 226:22]
    PassthroughModule_55.io.in <= vec3D[3][1][3].in @[Vec.scala 226:22]
    node _T_220 = eq(PassthroughModule_55.io.out, UInt<4>("h8")) @[Vec.scala 227:29]
    node _T_221 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_222 = eq(_T_221, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_222 : @[Vec.scala 227:13]
      assert(clock, _T_220, UInt<1>("h1"), "") : assert_55 @[Vec.scala 227:13]
      node _T_223 = eq(_T_220, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_223 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_55 @[Vec.scala 227:13]
    inst PassthroughModule_56 of PassthroughModule_56 @[Vec.scala 225:30]
    PassthroughModule_56.clock <= clock
    PassthroughModule_56.reset <= reset
    vec3D[3][2][0].out <= PassthroughModule_56.io.out @[Vec.scala 226:22]
    PassthroughModule_56.io.in <= vec3D[3][2][0].in @[Vec.scala 226:22]
    node _T_224 = eq(PassthroughModule_56.io.out, UInt<3>("h6")) @[Vec.scala 227:29]
    node _T_225 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_226 = eq(_T_225, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_226 : @[Vec.scala 227:13]
      assert(clock, _T_224, UInt<1>("h1"), "") : assert_56 @[Vec.scala 227:13]
      node _T_227 = eq(_T_224, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_227 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_56 @[Vec.scala 227:13]
    inst PassthroughModule_57 of PassthroughModule_57 @[Vec.scala 225:30]
    PassthroughModule_57.clock <= clock
    PassthroughModule_57.reset <= reset
    vec3D[3][2][1].out <= PassthroughModule_57.io.out @[Vec.scala 226:22]
    PassthroughModule_57.io.in <= vec3D[3][2][1].in @[Vec.scala 226:22]
    node _T_228 = eq(PassthroughModule_57.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_229 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_230 = eq(_T_229, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_230 : @[Vec.scala 227:13]
      assert(clock, _T_228, UInt<1>("h1"), "") : assert_57 @[Vec.scala 227:13]
      node _T_231 = eq(_T_228, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_231 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_57 @[Vec.scala 227:13]
    inst PassthroughModule_58 of PassthroughModule_58 @[Vec.scala 225:30]
    PassthroughModule_58.clock <= clock
    PassthroughModule_58.reset <= reset
    vec3D[3][2][2].out <= PassthroughModule_58.io.out @[Vec.scala 226:22]
    PassthroughModule_58.io.in <= vec3D[3][2][2].in @[Vec.scala 226:22]
    node _T_232 = eq(PassthroughModule_58.io.out, UInt<4>("h8")) @[Vec.scala 227:29]
    node _T_233 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_234 = eq(_T_233, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_234 : @[Vec.scala 227:13]
      assert(clock, _T_232, UInt<1>("h1"), "") : assert_58 @[Vec.scala 227:13]
      node _T_235 = eq(_T_232, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_235 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_58 @[Vec.scala 227:13]
    inst PassthroughModule_59 of PassthroughModule_59 @[Vec.scala 225:30]
    PassthroughModule_59.clock <= clock
    PassthroughModule_59.reset <= reset
    vec3D[3][2][3].out <= PassthroughModule_59.io.out @[Vec.scala 226:22]
    PassthroughModule_59.io.in <= vec3D[3][2][3].in @[Vec.scala 226:22]
    node _T_236 = eq(PassthroughModule_59.io.out, UInt<4>("h9")) @[Vec.scala 227:29]
    node _T_237 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_238 = eq(_T_237, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_238 : @[Vec.scala 227:13]
      assert(clock, _T_236, UInt<1>("h1"), "") : assert_59 @[Vec.scala 227:13]
      node _T_239 = eq(_T_236, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_239 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_59 @[Vec.scala 227:13]
    inst PassthroughModule_60 of PassthroughModule_60 @[Vec.scala 225:30]
    PassthroughModule_60.clock <= clock
    PassthroughModule_60.reset <= reset
    vec3D[3][3][0].out <= PassthroughModule_60.io.out @[Vec.scala 226:22]
    PassthroughModule_60.io.in <= vec3D[3][3][0].in @[Vec.scala 226:22]
    node _T_240 = eq(PassthroughModule_60.io.out, UInt<3>("h7")) @[Vec.scala 227:29]
    node _T_241 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_242 = eq(_T_241, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_242 : @[Vec.scala 227:13]
      assert(clock, _T_240, UInt<1>("h1"), "") : assert_60 @[Vec.scala 227:13]
      node _T_243 = eq(_T_240, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_243 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_60 @[Vec.scala 227:13]
    inst PassthroughModule_61 of PassthroughModule_61 @[Vec.scala 225:30]
    PassthroughModule_61.clock <= clock
    PassthroughModule_61.reset <= reset
    vec3D[3][3][1].out <= PassthroughModule_61.io.out @[Vec.scala 226:22]
    PassthroughModule_61.io.in <= vec3D[3][3][1].in @[Vec.scala 226:22]
    node _T_244 = eq(PassthroughModule_61.io.out, UInt<4>("h8")) @[Vec.scala 227:29]
    node _T_245 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_246 = eq(_T_245, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_246 : @[Vec.scala 227:13]
      assert(clock, _T_244, UInt<1>("h1"), "") : assert_61 @[Vec.scala 227:13]
      node _T_247 = eq(_T_244, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_247 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_61 @[Vec.scala 227:13]
    inst PassthroughModule_62 of PassthroughModule_62 @[Vec.scala 225:30]
    PassthroughModule_62.clock <= clock
    PassthroughModule_62.reset <= reset
    vec3D[3][3][2].out <= PassthroughModule_62.io.out @[Vec.scala 226:22]
    PassthroughModule_62.io.in <= vec3D[3][3][2].in @[Vec.scala 226:22]
    node _T_248 = eq(PassthroughModule_62.io.out, UInt<4>("h9")) @[Vec.scala 227:29]
    node _T_249 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_250 = eq(_T_249, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_250 : @[Vec.scala 227:13]
      assert(clock, _T_248, UInt<1>("h1"), "") : assert_62 @[Vec.scala 227:13]
      node _T_251 = eq(_T_248, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_251 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_62 @[Vec.scala 227:13]
    inst PassthroughModule_63 of PassthroughModule_63 @[Vec.scala 225:30]
    PassthroughModule_63.clock <= clock
    PassthroughModule_63.reset <= reset
    vec3D[3][3][3].out <= PassthroughModule_63.io.out @[Vec.scala 226:22]
    PassthroughModule_63.io.in <= vec3D[3][3][3].in @[Vec.scala 226:22]
    node _T_252 = eq(PassthroughModule_63.io.out, UInt<4>("ha")) @[Vec.scala 227:29]
    node _T_253 = bits(reset, 0, 0) @[Vec.scala 227:13]
    node _T_254 = eq(_T_253, UInt<1>("h0")) @[Vec.scala 227:13]
    when _T_254 : @[Vec.scala 227:13]
      assert(clock, _T_252, UInt<1>("h1"), "") : assert_63 @[Vec.scala 227:13]
      node _T_255 = eq(_T_252, UInt<1>("h0")) @[Vec.scala 227:13]
      when _T_255 : @[Vec.scala 227:13]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:227 assert(receiveMod.out === value.U)\n") : printf_63 @[Vec.scala 227:13]
    node _T_256 = bits(reset, 0, 0) @[Vec.scala 229:9]
    node _T_257 = eq(_T_256, UInt<1>("h0")) @[Vec.scala 229:9]
    when _T_257 : @[Vec.scala 229:9]
      stop(clock, UInt<1>("h1"), 0) : stop @[Vec.scala 229:9]
