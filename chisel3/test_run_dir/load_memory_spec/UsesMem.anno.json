[
  {
    "class":"firrtl.transforms.DedupedResult",
    "original":"~UsesMem|UsesMemLow",
    "duplicate":"~UsesMem|UsesMem/low1:UsesMemLow",
    "index":0.0
  },
  {
    "class":"firrtl.transforms.DedupedResult",
    "original":"~UsesMem|UsesMemLow_1",
    "duplicate":"~UsesMem|UsesMem/low2:UsesMemLow",
    "index":0.5
  },
  {
    "class":"firrtl.EmitCircuitAnnotation",
    "emitter":"firrtl.VerilogEmitter"
  },
  {
    "class":"firrtl.annotations.LoadMemoryAnnotation",
    "target":"UsesMem.UsesMemLow.memory",
    "fileName":"./mem2",
    "hexOrBinary":"h",
    "originalMemoryNameOpt":"memory"
  },
  {
    "class":"firrtl.annotations.LoadMemoryAnnotation",
    "target":"UsesMem.UsesMem.memory",
    "fileName":"./mem1",
    "hexOrBinary":"h",
    "originalMemoryNameOpt":"memory"
  },
  {
    "class":"firrtl.transforms.BlackBoxTargetDirAnno",
    "targetDir":"test_run_dir/load_memory_spec"
  },
  {
    "class":"firrtl.transforms.CombinationalPath",
    "sink":"~UsesMem|UsesMem>io_value2",
    "sources":[
      "~UsesMem|UsesMem>io_address"
    ]
  },
  {
    "class":"firrtl.transforms.CombinationalPath",
    "sink":"~UsesMem|UsesMem>io_value1",
    "sources":[
      "~UsesMem|UsesMem>io_address"
    ]
  },
  {
    "class":"firrtl.transforms.CombinationalPath",
    "sink":"~UsesMem|UsesMem>io_value",
    "sources":[
      "~UsesMem|UsesMem>io_address"
    ]
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"UsesMem.UsesMemLow",
    "name":"UsesMem.UsesMemLow.memory.v",
    "text":"module BindsTo_0_UsesMemLow(\n  input         clock,\n  input  [15:0] io_address,\n  output [15:0] io_value\n);\n\ninitial begin\n  $readmemh(\"./mem2\", UsesMemLow.memory);\nend\n                      endmodule\n\nbind UsesMemLow BindsTo_0_UsesMemLow BindsTo_0_UsesMemLow_Inst(.*);"
  },
  {
    "class":"firrtl.transforms.BlackBoxInlineAnno",
    "target":"UsesMem.UsesMem",
    "name":"UsesMem.UsesMem.memory.v",
    "text":"module BindsTo_1_UsesMem(\n  input         clock,\n  input         reset,\n  input  [15:0] io_address,\n  output [15:0] io_value,\n  output [15:0] io_value1,\n  output [15:0] io_value2\n);\n\ninitial begin\n  $readmemh(\"./mem1\", UsesMem.memory);\nend\n                      endmodule\n\nbind UsesMem BindsTo_1_UsesMem BindsTo_1_UsesMem_Inst(.*);"
  }
]