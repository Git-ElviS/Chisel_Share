circuit ValueTester :
  module ValueTester :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    wire v : UInt<2>[8] @[Vec.scala 91:18]
    v[0] <= UInt<2>("h0") @[Vec.scala 91:18]
    v[1] <= UInt<2>("h2") @[Vec.scala 91:18]
    v[2] <= UInt<2>("h2") @[Vec.scala 91:18]
    v[3] <= UInt<2>("h0") @[Vec.scala 91:18]
    v[4] <= UInt<2>("h1") @[Vec.scala 91:18]
    v[5] <= UInt<2>("h3") @[Vec.scala 91:18]
    v[6] <= UInt<2>("h2") @[Vec.scala 91:18]
    v[7] <= UInt<2>("h2") @[Vec.scala 91:18]
    node _T = eq(v[0], UInt<1>("h0")) @[Vec.scala 93:14]
    node _T_1 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_2 : @[Vec.scala 93:11]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[Vec.scala 93:11]
      node _T_3 = eq(_T, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_3 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf @[Vec.scala 93:11]
    node _T_4 = eq(v[1], UInt<2>("h2")) @[Vec.scala 93:14]
    node _T_5 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_6 : @[Vec.scala 93:11]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[Vec.scala 93:11]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_7 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_1 @[Vec.scala 93:11]
    node _T_8 = eq(v[2], UInt<2>("h2")) @[Vec.scala 93:14]
    node _T_9 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_10 : @[Vec.scala 93:11]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[Vec.scala 93:11]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_11 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_2 @[Vec.scala 93:11]
    node _T_12 = eq(v[3], UInt<1>("h0")) @[Vec.scala 93:14]
    node _T_13 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_14 : @[Vec.scala 93:11]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[Vec.scala 93:11]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_15 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_3 @[Vec.scala 93:11]
    node _T_16 = eq(v[4], UInt<1>("h1")) @[Vec.scala 93:14]
    node _T_17 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_18 : @[Vec.scala 93:11]
      assert(clock, _T_16, UInt<1>("h1"), "") : assert_4 @[Vec.scala 93:11]
      node _T_19 = eq(_T_16, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_19 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_4 @[Vec.scala 93:11]
    node _T_20 = eq(v[5], UInt<2>("h3")) @[Vec.scala 93:14]
    node _T_21 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_22 : @[Vec.scala 93:11]
      assert(clock, _T_20, UInt<1>("h1"), "") : assert_5 @[Vec.scala 93:11]
      node _T_23 = eq(_T_20, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_23 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_5 @[Vec.scala 93:11]
    node _T_24 = eq(v[6], UInt<2>("h2")) @[Vec.scala 93:14]
    node _T_25 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_26 : @[Vec.scala 93:11]
      assert(clock, _T_24, UInt<1>("h1"), "") : assert_6 @[Vec.scala 93:11]
      node _T_27 = eq(_T_24, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_27 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_6 @[Vec.scala 93:11]
    node _T_28 = eq(v[7], UInt<2>("h2")) @[Vec.scala 93:14]
    node _T_29 = bits(reset, 0, 0) @[Vec.scala 93:11]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[Vec.scala 93:11]
    when _T_30 : @[Vec.scala 93:11]
      assert(clock, _T_28, UInt<1>("h1"), "") : assert_7 @[Vec.scala 93:11]
      node _T_31 = eq(_T_28, UInt<1>("h0")) @[Vec.scala 93:11]
      when _T_31 : @[Vec.scala 93:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at Vec.scala:93 assert(a === b.asUInt)\n") : printf_7 @[Vec.scala 93:11]
    node _T_32 = bits(reset, 0, 0) @[Vec.scala 95:7]
    node _T_33 = eq(_T_32, UInt<1>("h0")) @[Vec.scala 95:7]
    when _T_33 : @[Vec.scala 95:7]
      stop(clock, UInt<1>("h1"), 0) : stop @[Vec.scala 95:7]
