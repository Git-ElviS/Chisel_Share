circuit VecLiteralSpec_Anon :
  module VecLiteralSpec_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    node _T = eq(UInt<16>("hdd"), UInt<8>("hdd")) @[VecLiteralSpec.scala 219:41]
    node _T_1 = bits(reset, 0, 0) @[VecLiteralSpec.scala 219:23]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[VecLiteralSpec.scala 219:23]
    when _T_2 : @[VecLiteralSpec.scala 219:23]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[VecLiteralSpec.scala 219:23]
      node _T_3 = eq(_T, UInt<1>("h0")) @[VecLiteralSpec.scala 219:23]
      when _T_3 : @[VecLiteralSpec.scala 219:23]
        printf(clock, UInt<1>("h1"), "Assertion failed: v(0)\n    at VecLiteralSpec.scala:219 chisel3.assert(outsideVecLit(0) === 0xdd.U, s\"v(0)\")\n") : printf @[VecLiteralSpec.scala 219:23]
    node _T_4 = eq(UInt<16>("hcc"), UInt<8>("hcc")) @[VecLiteralSpec.scala 220:41]
    node _T_5 = bits(reset, 0, 0) @[VecLiteralSpec.scala 220:23]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[VecLiteralSpec.scala 220:23]
    when _T_6 : @[VecLiteralSpec.scala 220:23]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[VecLiteralSpec.scala 220:23]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[VecLiteralSpec.scala 220:23]
      when _T_7 : @[VecLiteralSpec.scala 220:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:220 chisel3.assert(outsideVecLit(1) === 0xcc.U)\n") : printf_1 @[VecLiteralSpec.scala 220:23]
    node _T_8 = eq(UInt<16>("hbb"), UInt<8>("hbb")) @[VecLiteralSpec.scala 221:41]
    node _T_9 = bits(reset, 0, 0) @[VecLiteralSpec.scala 221:23]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[VecLiteralSpec.scala 221:23]
    when _T_10 : @[VecLiteralSpec.scala 221:23]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[VecLiteralSpec.scala 221:23]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[VecLiteralSpec.scala 221:23]
      when _T_11 : @[VecLiteralSpec.scala 221:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:221 chisel3.assert(outsideVecLit(2) === 0xbb.U)\n") : printf_2 @[VecLiteralSpec.scala 221:23]
    node _T_12 = eq(UInt<16>("haa"), UInt<8>("haa")) @[VecLiteralSpec.scala 222:41]
    node _T_13 = bits(reset, 0, 0) @[VecLiteralSpec.scala 222:23]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[VecLiteralSpec.scala 222:23]
    when _T_14 : @[VecLiteralSpec.scala 222:23]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[VecLiteralSpec.scala 222:23]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[VecLiteralSpec.scala 222:23]
      when _T_15 : @[VecLiteralSpec.scala 222:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:222 chisel3.assert(outsideVecLit(3) === 0xaa.U)\n") : printf_3 @[VecLiteralSpec.scala 222:23]
    node lo = cat(UInt<16>("hcc"), UInt<16>("hdd")) @[VecLiteralSpec.scala 224:73]
    node hi = cat(UInt<16>("haa"), UInt<16>("hbb")) @[VecLiteralSpec.scala 224:73]
    node _T_16 = cat(hi, lo) @[VecLiteralSpec.scala 224:73]
    node _T_17 = eq(UInt<56>("haa00bb00cc00dd"), _T_16) @[VecLiteralSpec.scala 224:49]
    node _T_18 = bits(reset, 0, 0) @[VecLiteralSpec.scala 224:23]
    node _T_19 = eq(_T_18, UInt<1>("h0")) @[VecLiteralSpec.scala 224:23]
    when _T_19 : @[VecLiteralSpec.scala 224:23]
      assert(clock, _T_17, UInt<1>("h1"), "") : assert_4 @[VecLiteralSpec.scala 224:23]
      node _T_20 = eq(_T_17, UInt<1>("h0")) @[VecLiteralSpec.scala 224:23]
      when _T_20 : @[VecLiteralSpec.scala 224:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:224 chisel3.assert(outsideVecLit.litValue.U === outsideVecLit.asUInt())\n") : printf_4 @[VecLiteralSpec.scala 224:23]
    node _T_21 = eq(UInt<16>("hdd"), UInt<8>("hdd")) @[VecLiteralSpec.scala 227:40]
    node _T_22 = bits(reset, 0, 0) @[VecLiteralSpec.scala 227:23]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[VecLiteralSpec.scala 227:23]
    when _T_23 : @[VecLiteralSpec.scala 227:23]
      assert(clock, _T_21, UInt<1>("h1"), "") : assert_5 @[VecLiteralSpec.scala 227:23]
      node _T_24 = eq(_T_21, UInt<1>("h0")) @[VecLiteralSpec.scala 227:23]
      when _T_24 : @[VecLiteralSpec.scala 227:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:227 chisel3.assert(insideVecLit(0) === 0xdd.U)\n") : printf_5 @[VecLiteralSpec.scala 227:23]
    node _T_25 = eq(UInt<16>("hcc"), UInt<8>("hcc")) @[VecLiteralSpec.scala 228:40]
    node _T_26 = bits(reset, 0, 0) @[VecLiteralSpec.scala 228:23]
    node _T_27 = eq(_T_26, UInt<1>("h0")) @[VecLiteralSpec.scala 228:23]
    when _T_27 : @[VecLiteralSpec.scala 228:23]
      assert(clock, _T_25, UInt<1>("h1"), "") : assert_6 @[VecLiteralSpec.scala 228:23]
      node _T_28 = eq(_T_25, UInt<1>("h0")) @[VecLiteralSpec.scala 228:23]
      when _T_28 : @[VecLiteralSpec.scala 228:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:228 chisel3.assert(insideVecLit(1) === 0xcc.U)\n") : printf_6 @[VecLiteralSpec.scala 228:23]
    node _T_29 = eq(UInt<16>("hbb"), UInt<8>("hbb")) @[VecLiteralSpec.scala 229:40]
    node _T_30 = bits(reset, 0, 0) @[VecLiteralSpec.scala 229:23]
    node _T_31 = eq(_T_30, UInt<1>("h0")) @[VecLiteralSpec.scala 229:23]
    when _T_31 : @[VecLiteralSpec.scala 229:23]
      assert(clock, _T_29, UInt<1>("h1"), "") : assert_7 @[VecLiteralSpec.scala 229:23]
      node _T_32 = eq(_T_29, UInt<1>("h0")) @[VecLiteralSpec.scala 229:23]
      when _T_32 : @[VecLiteralSpec.scala 229:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:229 chisel3.assert(insideVecLit(2) === 0xbb.U)\n") : printf_7 @[VecLiteralSpec.scala 229:23]
    node _T_33 = eq(UInt<16>("haa"), UInt<8>("haa")) @[VecLiteralSpec.scala 230:40]
    node _T_34 = bits(reset, 0, 0) @[VecLiteralSpec.scala 230:23]
    node _T_35 = eq(_T_34, UInt<1>("h0")) @[VecLiteralSpec.scala 230:23]
    when _T_35 : @[VecLiteralSpec.scala 230:23]
      assert(clock, _T_33, UInt<1>("h1"), "") : assert_8 @[VecLiteralSpec.scala 230:23]
      node _T_36 = eq(_T_33, UInt<1>("h0")) @[VecLiteralSpec.scala 230:23]
      when _T_36 : @[VecLiteralSpec.scala 230:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:230 chisel3.assert(insideVecLit(3) === 0xaa.U)\n") : printf_8 @[VecLiteralSpec.scala 230:23]
    node _T_37 = eq(UInt<16>("hdd"), UInt<16>("hdd")) @[VecLiteralSpec.scala 232:40]
    node _T_38 = bits(reset, 0, 0) @[VecLiteralSpec.scala 232:23]
    node _T_39 = eq(_T_38, UInt<1>("h0")) @[VecLiteralSpec.scala 232:23]
    when _T_39 : @[VecLiteralSpec.scala 232:23]
      assert(clock, _T_37, UInt<1>("h1"), "") : assert_9 @[VecLiteralSpec.scala 232:23]
      node _T_40 = eq(_T_37, UInt<1>("h0")) @[VecLiteralSpec.scala 232:23]
      when _T_40 : @[VecLiteralSpec.scala 232:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:232 chisel3.assert(insideVecLit(0) === outsideVecLit(0))\n") : printf_9 @[VecLiteralSpec.scala 232:23]
    node _T_41 = eq(UInt<16>("hcc"), UInt<16>("hcc")) @[VecLiteralSpec.scala 233:40]
    node _T_42 = bits(reset, 0, 0) @[VecLiteralSpec.scala 233:23]
    node _T_43 = eq(_T_42, UInt<1>("h0")) @[VecLiteralSpec.scala 233:23]
    when _T_43 : @[VecLiteralSpec.scala 233:23]
      assert(clock, _T_41, UInt<1>("h1"), "") : assert_10 @[VecLiteralSpec.scala 233:23]
      node _T_44 = eq(_T_41, UInt<1>("h0")) @[VecLiteralSpec.scala 233:23]
      when _T_44 : @[VecLiteralSpec.scala 233:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:233 chisel3.assert(insideVecLit(1) === outsideVecLit(1))\n") : printf_10 @[VecLiteralSpec.scala 233:23]
    node _T_45 = eq(UInt<16>("hbb"), UInt<16>("hbb")) @[VecLiteralSpec.scala 234:40]
    node _T_46 = bits(reset, 0, 0) @[VecLiteralSpec.scala 234:23]
    node _T_47 = eq(_T_46, UInt<1>("h0")) @[VecLiteralSpec.scala 234:23]
    when _T_47 : @[VecLiteralSpec.scala 234:23]
      assert(clock, _T_45, UInt<1>("h1"), "") : assert_11 @[VecLiteralSpec.scala 234:23]
      node _T_48 = eq(_T_45, UInt<1>("h0")) @[VecLiteralSpec.scala 234:23]
      when _T_48 : @[VecLiteralSpec.scala 234:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:234 chisel3.assert(insideVecLit(2) === outsideVecLit(2))\n") : printf_11 @[VecLiteralSpec.scala 234:23]
    node _T_49 = eq(UInt<16>("haa"), UInt<16>("haa")) @[VecLiteralSpec.scala 235:40]
    node _T_50 = bits(reset, 0, 0) @[VecLiteralSpec.scala 235:23]
    node _T_51 = eq(_T_50, UInt<1>("h0")) @[VecLiteralSpec.scala 235:23]
    when _T_51 : @[VecLiteralSpec.scala 235:23]
      assert(clock, _T_49, UInt<1>("h1"), "") : assert_12 @[VecLiteralSpec.scala 235:23]
      node _T_52 = eq(_T_49, UInt<1>("h0")) @[VecLiteralSpec.scala 235:23]
      when _T_52 : @[VecLiteralSpec.scala 235:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:235 chisel3.assert(insideVecLit(3) === outsideVecLit(3))\n") : printf_12 @[VecLiteralSpec.scala 235:23]
    wire vecWire1 : UInt<16>[4] @[VecLiteralSpec.scala 237:28]
    vecWire1[0] <= UInt<16>("hdd") @[VecLiteralSpec.scala 238:18]
    vecWire1[1] <= UInt<16>("hcc") @[VecLiteralSpec.scala 238:18]
    vecWire1[2] <= UInt<16>("hbb") @[VecLiteralSpec.scala 238:18]
    vecWire1[3] <= UInt<16>("haa") @[VecLiteralSpec.scala 238:18]
    node _T_53 = eq(vecWire1[0], UInt<8>("hdd")) @[VecLiteralSpec.scala 240:36]
    node _T_54 = bits(reset, 0, 0) @[VecLiteralSpec.scala 240:23]
    node _T_55 = eq(_T_54, UInt<1>("h0")) @[VecLiteralSpec.scala 240:23]
    when _T_55 : @[VecLiteralSpec.scala 240:23]
      assert(clock, _T_53, UInt<1>("h1"), "") : assert_13 @[VecLiteralSpec.scala 240:23]
      node _T_56 = eq(_T_53, UInt<1>("h0")) @[VecLiteralSpec.scala 240:23]
      when _T_56 : @[VecLiteralSpec.scala 240:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:240 chisel3.assert(vecWire1(0) === 0xdd.U)\n") : printf_13 @[VecLiteralSpec.scala 240:23]
    node _T_57 = eq(vecWire1[1], UInt<8>("hcc")) @[VecLiteralSpec.scala 241:36]
    node _T_58 = bits(reset, 0, 0) @[VecLiteralSpec.scala 241:23]
    node _T_59 = eq(_T_58, UInt<1>("h0")) @[VecLiteralSpec.scala 241:23]
    when _T_59 : @[VecLiteralSpec.scala 241:23]
      assert(clock, _T_57, UInt<1>("h1"), "") : assert_14 @[VecLiteralSpec.scala 241:23]
      node _T_60 = eq(_T_57, UInt<1>("h0")) @[VecLiteralSpec.scala 241:23]
      when _T_60 : @[VecLiteralSpec.scala 241:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:241 chisel3.assert(vecWire1(1) === 0xcc.U)\n") : printf_14 @[VecLiteralSpec.scala 241:23]
    node _T_61 = eq(vecWire1[2], UInt<8>("hbb")) @[VecLiteralSpec.scala 242:36]
    node _T_62 = bits(reset, 0, 0) @[VecLiteralSpec.scala 242:23]
    node _T_63 = eq(_T_62, UInt<1>("h0")) @[VecLiteralSpec.scala 242:23]
    when _T_63 : @[VecLiteralSpec.scala 242:23]
      assert(clock, _T_61, UInt<1>("h1"), "") : assert_15 @[VecLiteralSpec.scala 242:23]
      node _T_64 = eq(_T_61, UInt<1>("h0")) @[VecLiteralSpec.scala 242:23]
      when _T_64 : @[VecLiteralSpec.scala 242:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:242 chisel3.assert(vecWire1(2) === 0xbb.U)\n") : printf_15 @[VecLiteralSpec.scala 242:23]
    node _T_65 = eq(vecWire1[3], UInt<8>("haa")) @[VecLiteralSpec.scala 243:36]
    node _T_66 = bits(reset, 0, 0) @[VecLiteralSpec.scala 243:23]
    node _T_67 = eq(_T_66, UInt<1>("h0")) @[VecLiteralSpec.scala 243:23]
    when _T_67 : @[VecLiteralSpec.scala 243:23]
      assert(clock, _T_65, UInt<1>("h1"), "") : assert_16 @[VecLiteralSpec.scala 243:23]
      node _T_68 = eq(_T_65, UInt<1>("h0")) @[VecLiteralSpec.scala 243:23]
      when _T_68 : @[VecLiteralSpec.scala 243:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:243 chisel3.assert(vecWire1(3) === 0xaa.U)\n") : printf_16 @[VecLiteralSpec.scala 243:23]
    wire vecWire2 : UInt<16>[4] @[VecLiteralSpec.scala 245:28]
    vecWire2[0] <= UInt<16>("hdd") @[VecLiteralSpec.scala 246:18]
    vecWire2[1] <= UInt<16>("hcc") @[VecLiteralSpec.scala 246:18]
    vecWire2[2] <= UInt<16>("hbb") @[VecLiteralSpec.scala 246:18]
    vecWire2[3] <= UInt<16>("haa") @[VecLiteralSpec.scala 246:18]
    node _T_69 = eq(vecWire2[0], UInt<8>("hdd")) @[VecLiteralSpec.scala 248:36]
    node _T_70 = bits(reset, 0, 0) @[VecLiteralSpec.scala 248:23]
    node _T_71 = eq(_T_70, UInt<1>("h0")) @[VecLiteralSpec.scala 248:23]
    when _T_71 : @[VecLiteralSpec.scala 248:23]
      assert(clock, _T_69, UInt<1>("h1"), "") : assert_17 @[VecLiteralSpec.scala 248:23]
      node _T_72 = eq(_T_69, UInt<1>("h0")) @[VecLiteralSpec.scala 248:23]
      when _T_72 : @[VecLiteralSpec.scala 248:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:248 chisel3.assert(vecWire2(0) === 0xdd.U)\n") : printf_17 @[VecLiteralSpec.scala 248:23]
    node _T_73 = eq(vecWire2[1], UInt<8>("hcc")) @[VecLiteralSpec.scala 249:36]
    node _T_74 = bits(reset, 0, 0) @[VecLiteralSpec.scala 249:23]
    node _T_75 = eq(_T_74, UInt<1>("h0")) @[VecLiteralSpec.scala 249:23]
    when _T_75 : @[VecLiteralSpec.scala 249:23]
      assert(clock, _T_73, UInt<1>("h1"), "") : assert_18 @[VecLiteralSpec.scala 249:23]
      node _T_76 = eq(_T_73, UInt<1>("h0")) @[VecLiteralSpec.scala 249:23]
      when _T_76 : @[VecLiteralSpec.scala 249:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:249 chisel3.assert(vecWire2(1) === 0xcc.U)\n") : printf_18 @[VecLiteralSpec.scala 249:23]
    node _T_77 = eq(vecWire2[2], UInt<8>("hbb")) @[VecLiteralSpec.scala 250:36]
    node _T_78 = bits(reset, 0, 0) @[VecLiteralSpec.scala 250:23]
    node _T_79 = eq(_T_78, UInt<1>("h0")) @[VecLiteralSpec.scala 250:23]
    when _T_79 : @[VecLiteralSpec.scala 250:23]
      assert(clock, _T_77, UInt<1>("h1"), "") : assert_19 @[VecLiteralSpec.scala 250:23]
      node _T_80 = eq(_T_77, UInt<1>("h0")) @[VecLiteralSpec.scala 250:23]
      when _T_80 : @[VecLiteralSpec.scala 250:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:250 chisel3.assert(vecWire2(2) === 0xbb.U)\n") : printf_19 @[VecLiteralSpec.scala 250:23]
    node _T_81 = eq(vecWire2[3], UInt<8>("haa")) @[VecLiteralSpec.scala 251:36]
    node _T_82 = bits(reset, 0, 0) @[VecLiteralSpec.scala 251:23]
    node _T_83 = eq(_T_82, UInt<1>("h0")) @[VecLiteralSpec.scala 251:23]
    when _T_83 : @[VecLiteralSpec.scala 251:23]
      assert(clock, _T_81, UInt<1>("h1"), "") : assert_20 @[VecLiteralSpec.scala 251:23]
      node _T_84 = eq(_T_81, UInt<1>("h0")) @[VecLiteralSpec.scala 251:23]
      when _T_84 : @[VecLiteralSpec.scala 251:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:251 chisel3.assert(vecWire2(3) === 0xaa.U)\n") : printf_20 @[VecLiteralSpec.scala 251:23]
    node _T_85 = bits(reset, 0, 0) @[VecLiteralSpec.scala 253:13]
    node _T_86 = eq(_T_85, UInt<1>("h0")) @[VecLiteralSpec.scala 253:13]
    when _T_86 : @[VecLiteralSpec.scala 253:13]
      stop(clock, UInt<1>("h1"), 0) : stop @[VecLiteralSpec.scala 253:13]
