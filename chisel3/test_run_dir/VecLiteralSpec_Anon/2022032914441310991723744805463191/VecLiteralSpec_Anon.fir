circuit VecLiteralSpec_Anon :
  module VecLiteralSpec_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    node _T = eq(UInt<4>("h1"), UInt<1>("h1")) @[VecLiteralSpec.scala 301:39]
    node _T_1 = bits(reset, 0, 0) @[VecLiteralSpec.scala 301:23]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[VecLiteralSpec.scala 301:23]
    when _T_2 : @[VecLiteralSpec.scala 301:23]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[VecLiteralSpec.scala 301:23]
      node _T_3 = eq(_T, UInt<1>("h0")) @[VecLiteralSpec.scala 301:23]
      when _T_3 : @[VecLiteralSpec.scala 301:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:301 chisel3.assert(outerVec(0)(0) === 1.U)\n") : printf @[VecLiteralSpec.scala 301:23]
    node _T_4 = eq(UInt<4>("h2"), UInt<2>("h2")) @[VecLiteralSpec.scala 302:39]
    node _T_5 = bits(reset, 0, 0) @[VecLiteralSpec.scala 302:23]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[VecLiteralSpec.scala 302:23]
    when _T_6 : @[VecLiteralSpec.scala 302:23]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[VecLiteralSpec.scala 302:23]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[VecLiteralSpec.scala 302:23]
      when _T_7 : @[VecLiteralSpec.scala 302:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:302 chisel3.assert(outerVec(0)(1) === 2.U)\n") : printf_1 @[VecLiteralSpec.scala 302:23]
    node _T_8 = eq(UInt<4>("h3"), UInt<2>("h3")) @[VecLiteralSpec.scala 303:39]
    node _T_9 = bits(reset, 0, 0) @[VecLiteralSpec.scala 303:23]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[VecLiteralSpec.scala 303:23]
    when _T_10 : @[VecLiteralSpec.scala 303:23]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[VecLiteralSpec.scala 303:23]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[VecLiteralSpec.scala 303:23]
      when _T_11 : @[VecLiteralSpec.scala 303:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:303 chisel3.assert(outerVec(0)(2) === 3.U)\n") : printf_2 @[VecLiteralSpec.scala 303:23]
    node _T_12 = eq(UInt<4>("h4"), UInt<3>("h4")) @[VecLiteralSpec.scala 304:39]
    node _T_13 = bits(reset, 0, 0) @[VecLiteralSpec.scala 304:23]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[VecLiteralSpec.scala 304:23]
    when _T_14 : @[VecLiteralSpec.scala 304:23]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[VecLiteralSpec.scala 304:23]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[VecLiteralSpec.scala 304:23]
      when _T_15 : @[VecLiteralSpec.scala 304:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:304 chisel3.assert(outerVec(1)(0) === 4.U)\n") : printf_3 @[VecLiteralSpec.scala 304:23]
    node _T_16 = eq(UInt<4>("h5"), UInt<3>("h5")) @[VecLiteralSpec.scala 305:39]
    node _T_17 = bits(reset, 0, 0) @[VecLiteralSpec.scala 305:23]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[VecLiteralSpec.scala 305:23]
    when _T_18 : @[VecLiteralSpec.scala 305:23]
      assert(clock, _T_16, UInt<1>("h1"), "") : assert_4 @[VecLiteralSpec.scala 305:23]
      node _T_19 = eq(_T_16, UInt<1>("h0")) @[VecLiteralSpec.scala 305:23]
      when _T_19 : @[VecLiteralSpec.scala 305:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:305 chisel3.assert(outerVec(1)(1) === 5.U)\n") : printf_4 @[VecLiteralSpec.scala 305:23]
    node _T_20 = eq(UInt<4>("h6"), UInt<3>("h6")) @[VecLiteralSpec.scala 306:39]
    node _T_21 = bits(reset, 0, 0) @[VecLiteralSpec.scala 306:23]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[VecLiteralSpec.scala 306:23]
    when _T_22 : @[VecLiteralSpec.scala 306:23]
      assert(clock, _T_20, UInt<1>("h1"), "") : assert_5 @[VecLiteralSpec.scala 306:23]
      node _T_23 = eq(_T_20, UInt<1>("h0")) @[VecLiteralSpec.scala 306:23]
      when _T_23 : @[VecLiteralSpec.scala 306:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:306 chisel3.assert(outerVec(1)(2) === 6.U)\n") : printf_5 @[VecLiteralSpec.scala 306:23]
    node _T_24 = eq(UInt<4>("h1"), UInt<1>("h1")) @[VecLiteralSpec.scala 310:30]
    node _T_25 = bits(reset, 0, 0) @[VecLiteralSpec.scala 310:23]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[VecLiteralSpec.scala 310:23]
    when _T_26 : @[VecLiteralSpec.scala 310:23]
      assert(clock, _T_24, UInt<1>("h1"), "") : assert_6 @[VecLiteralSpec.scala 310:23]
      node _T_27 = eq(_T_24, UInt<1>("h0")) @[VecLiteralSpec.scala 310:23]
      when _T_27 : @[VecLiteralSpec.scala 310:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:310 chisel3.assert(v0(0) === 1.U)\n") : printf_6 @[VecLiteralSpec.scala 310:23]
    node _T_28 = eq(UInt<4>("h2"), UInt<2>("h2")) @[VecLiteralSpec.scala 311:30]
    node _T_29 = bits(reset, 0, 0) @[VecLiteralSpec.scala 311:23]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[VecLiteralSpec.scala 311:23]
    when _T_30 : @[VecLiteralSpec.scala 311:23]
      assert(clock, _T_28, UInt<1>("h1"), "") : assert_7 @[VecLiteralSpec.scala 311:23]
      node _T_31 = eq(_T_28, UInt<1>("h0")) @[VecLiteralSpec.scala 311:23]
      when _T_31 : @[VecLiteralSpec.scala 311:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:311 chisel3.assert(v0(1) === 2.U)\n") : printf_7 @[VecLiteralSpec.scala 311:23]
    node _T_32 = eq(UInt<4>("h3"), UInt<2>("h3")) @[VecLiteralSpec.scala 312:30]
    node _T_33 = bits(reset, 0, 0) @[VecLiteralSpec.scala 312:23]
    node _T_34 = eq(_T_33, UInt<1>("h0")) @[VecLiteralSpec.scala 312:23]
    when _T_34 : @[VecLiteralSpec.scala 312:23]
      assert(clock, _T_32, UInt<1>("h1"), "") : assert_8 @[VecLiteralSpec.scala 312:23]
      node _T_35 = eq(_T_32, UInt<1>("h0")) @[VecLiteralSpec.scala 312:23]
      when _T_35 : @[VecLiteralSpec.scala 312:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:312 chisel3.assert(v0(2) === 3.U)\n") : printf_8 @[VecLiteralSpec.scala 312:23]
    node _T_36 = eq(UInt<4>("h4"), UInt<3>("h4")) @[VecLiteralSpec.scala 313:30]
    node _T_37 = bits(reset, 0, 0) @[VecLiteralSpec.scala 313:23]
    node _T_38 = eq(_T_37, UInt<1>("h0")) @[VecLiteralSpec.scala 313:23]
    when _T_38 : @[VecLiteralSpec.scala 313:23]
      assert(clock, _T_36, UInt<1>("h1"), "") : assert_9 @[VecLiteralSpec.scala 313:23]
      node _T_39 = eq(_T_36, UInt<1>("h0")) @[VecLiteralSpec.scala 313:23]
      when _T_39 : @[VecLiteralSpec.scala 313:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:313 chisel3.assert(v1(0) === 4.U)\n") : printf_9 @[VecLiteralSpec.scala 313:23]
    node _T_40 = eq(UInt<4>("h5"), UInt<3>("h5")) @[VecLiteralSpec.scala 314:30]
    node _T_41 = bits(reset, 0, 0) @[VecLiteralSpec.scala 314:23]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[VecLiteralSpec.scala 314:23]
    when _T_42 : @[VecLiteralSpec.scala 314:23]
      assert(clock, _T_40, UInt<1>("h1"), "") : assert_10 @[VecLiteralSpec.scala 314:23]
      node _T_43 = eq(_T_40, UInt<1>("h0")) @[VecLiteralSpec.scala 314:23]
      when _T_43 : @[VecLiteralSpec.scala 314:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:314 chisel3.assert(v1(1) === 5.U)\n") : printf_10 @[VecLiteralSpec.scala 314:23]
    node _T_44 = eq(UInt<4>("h6"), UInt<3>("h6")) @[VecLiteralSpec.scala 315:30]
    node _T_45 = bits(reset, 0, 0) @[VecLiteralSpec.scala 315:23]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[VecLiteralSpec.scala 315:23]
    when _T_46 : @[VecLiteralSpec.scala 315:23]
      assert(clock, _T_44, UInt<1>("h1"), "") : assert_11 @[VecLiteralSpec.scala 315:23]
      node _T_47 = eq(_T_44, UInt<1>("h0")) @[VecLiteralSpec.scala 315:23]
      when _T_47 : @[VecLiteralSpec.scala 315:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at VecLiteralSpec.scala:315 chisel3.assert(v1(2) === 6.U)\n") : printf_11 @[VecLiteralSpec.scala 315:23]
    node _T_48 = bits(reset, 0, 0) @[VecLiteralSpec.scala 317:13]
    node _T_49 = eq(_T_48, UInt<1>("h0")) @[VecLiteralSpec.scala 317:13]
    when _T_49 : @[VecLiteralSpec.scala 317:13]
      stop(clock, UInt<1>("h1"), 0) : stop @[VecLiteralSpec.scala 317:13]
