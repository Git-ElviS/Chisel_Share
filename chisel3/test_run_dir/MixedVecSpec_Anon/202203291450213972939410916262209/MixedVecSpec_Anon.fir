circuit MixedVecSpec_Anon :
  module MixedVecSpec_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    wire wire : { 1 : UInt<8>, 0 : UInt<1>} @[MixedVecSpec.scala 165:24]
    wire.0 <= UInt<1>("h1") @[MixedVecSpec.scala 166:17]
    wire.1 <= UInt<7>("h65") @[MixedVecSpec.scala 167:17]
    node _T = eq(wire.0, UInt<1>("h1")) @[MixedVecSpec.scala 169:32]
    node _T_1 = bits(reset, 0, 0) @[MixedVecSpec.scala 169:23]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[MixedVecSpec.scala 169:23]
    when _T_2 : @[MixedVecSpec.scala 169:23]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[MixedVecSpec.scala 169:23]
      node _T_3 = eq(_T, UInt<1>("h0")) @[MixedVecSpec.scala 169:23]
      when _T_3 : @[MixedVecSpec.scala 169:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at MixedVecSpec.scala:169 chisel3.assert(wire(0) === 1.U)\n") : printf @[MixedVecSpec.scala 169:23]
    node _T_4 = add(wire.1, UInt<1>("h1")) @[MixedVecSpec.scala 170:32]
    node _T_5 = tail(_T_4, 1) @[MixedVecSpec.scala 170:32]
    node _T_6 = eq(_T_5, UInt<7>("h66")) @[MixedVecSpec.scala 170:38]
    node _T_7 = bits(reset, 0, 0) @[MixedVecSpec.scala 170:23]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[MixedVecSpec.scala 170:23]
    when _T_8 : @[MixedVecSpec.scala 170:23]
      assert(clock, _T_6, UInt<1>("h1"), "") : assert_1 @[MixedVecSpec.scala 170:23]
      node _T_9 = eq(_T_6, UInt<1>("h0")) @[MixedVecSpec.scala 170:23]
      when _T_9 : @[MixedVecSpec.scala 170:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at MixedVecSpec.scala:170 chisel3.assert(wire(1) + 1.U === 102.U)\n") : printf_1 @[MixedVecSpec.scala 170:23]
    wire wireInit : { 1 : UInt<7>, 0 : UInt<1>} @[MixedVec.scala 28:26]
    wireInit.0 <= UInt<1>("h1") @[MixedVec.scala 31:9]
    wireInit.1 <= UInt<7>("h65") @[MixedVec.scala 31:9]
    node _T_10 = eq(wireInit.0, UInt<1>("h1")) @[MixedVecSpec.scala 173:36]
    node _T_11 = bits(reset, 0, 0) @[MixedVecSpec.scala 173:23]
    node _T_12 = eq(_T_11, UInt<1>("h0")) @[MixedVecSpec.scala 173:23]
    when _T_12 : @[MixedVecSpec.scala 173:23]
      assert(clock, _T_10, UInt<1>("h1"), "") : assert_2 @[MixedVecSpec.scala 173:23]
      node _T_13 = eq(_T_10, UInt<1>("h0")) @[MixedVecSpec.scala 173:23]
      when _T_13 : @[MixedVecSpec.scala 173:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at MixedVecSpec.scala:173 chisel3.assert(wireInit(0) === 1.U)\n") : printf_2 @[MixedVecSpec.scala 173:23]
    node _T_14 = add(wireInit.1, UInt<1>("h1")) @[MixedVecSpec.scala 174:36]
    node _T_15 = tail(_T_14, 1) @[MixedVecSpec.scala 174:36]
    node _T_16 = eq(_T_15, UInt<7>("h66")) @[MixedVecSpec.scala 174:42]
    node _T_17 = bits(reset, 0, 0) @[MixedVecSpec.scala 174:23]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[MixedVecSpec.scala 174:23]
    when _T_18 : @[MixedVecSpec.scala 174:23]
      assert(clock, _T_16, UInt<1>("h1"), "") : assert_3 @[MixedVecSpec.scala 174:23]
      node _T_19 = eq(_T_16, UInt<1>("h0")) @[MixedVecSpec.scala 174:23]
      when _T_19 : @[MixedVecSpec.scala 174:23]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at MixedVecSpec.scala:174 chisel3.assert(wireInit(1) + 1.U === 102.U)\n") : printf_3 @[MixedVecSpec.scala 174:23]
    node _T_20 = bits(reset, 0, 0) @[MixedVecSpec.scala 176:13]
    node _T_21 = eq(_T_20, UInt<1>("h0")) @[MixedVecSpec.scala 176:13]
    when _T_21 : @[MixedVecSpec.scala 176:13]
      stop(clock, UInt<1>("h1"), 0) : stop @[MixedVecSpec.scala 176:13]
