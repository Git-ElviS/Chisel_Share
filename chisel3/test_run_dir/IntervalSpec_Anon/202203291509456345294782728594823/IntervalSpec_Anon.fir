circuit IntervalSpec_Anon :
  module IntervalSpec_Anon :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    wire clippedValue : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T = clip(asInterval(UInt<1>("h0"), 0, 0, 2), clippedValue) @[IntervalSpec.scala 869:18]
    clippedValue <= _clippedValue_T @[IntervalSpec.scala 867:24]
    node _T = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue) @[IntervalSpec.scala 878:43]
    node _T_1 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_2 : @[IntervalSpec.scala 878:25]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[IntervalSpec.scala 878:25]
      node _T_3 = eq(_T, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_3 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf @[IntervalSpec.scala 878:25]
    wire wrappedValue : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T = wrap(asInterval(UInt<1>("h0"), 0, 0, 2), wrappedValue) @[IntervalSpec.scala 883:18]
    wrappedValue <= _wrappedValue_T @[IntervalSpec.scala 881:24]
    node _T_4 = eq(asInterval(UInt<6>("h11"), 17, 17, 2), wrappedValue) @[IntervalSpec.scala 892:43]
    node _T_5 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_6 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[IntervalSpec.scala 892:25]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_7 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_1 @[IntervalSpec.scala 892:25]
    wire clippedValue_1 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_1 = clip(asInterval(UInt<2>("h1"), 1, 1, 2), clippedValue_1) @[IntervalSpec.scala 869:18]
    clippedValue_1 <= _clippedValue_T_1 @[IntervalSpec.scala 867:24]
    node _T_8 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_1) @[IntervalSpec.scala 878:43]
    node _T_9 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_10 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[IntervalSpec.scala 878:25]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_11 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_2 @[IntervalSpec.scala 878:25]
    wire wrappedValue_1 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_1 = wrap(asInterval(UInt<2>("h1"), 1, 1, 2), wrappedValue_1) @[IntervalSpec.scala 883:18]
    wrappedValue_1 <= _wrappedValue_T_1 @[IntervalSpec.scala 881:24]
    node _T_12 = eq(asInterval(UInt<6>("h12"), 18, 18, 2), wrappedValue_1) @[IntervalSpec.scala 892:43]
    node _T_13 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_14 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[IntervalSpec.scala 892:25]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_15 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_3 @[IntervalSpec.scala 892:25]
    wire clippedValue_2 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_2 = clip(asInterval(UInt<3>("h2"), 2, 2, 2), clippedValue_2) @[IntervalSpec.scala 869:18]
    clippedValue_2 <= _clippedValue_T_2 @[IntervalSpec.scala 867:24]
    node _T_16 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_2) @[IntervalSpec.scala 878:43]
    node _T_17 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_18 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_16, UInt<1>("h1"), "") : assert_4 @[IntervalSpec.scala 878:25]
      node _T_19 = eq(_T_16, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_19 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_4 @[IntervalSpec.scala 878:25]
    wire wrappedValue_2 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_2 = wrap(asInterval(UInt<3>("h2"), 2, 2, 2), wrappedValue_2) @[IntervalSpec.scala 883:18]
    wrappedValue_2 <= _wrappedValue_T_2 @[IntervalSpec.scala 881:24]
    node _T_20 = eq(asInterval(UInt<6>("h13"), 19, 19, 2), wrappedValue_2) @[IntervalSpec.scala 892:43]
    node _T_21 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_22 = eq(_T_21, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_22 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_20, UInt<1>("h1"), "") : assert_5 @[IntervalSpec.scala 892:25]
      node _T_23 = eq(_T_20, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_23 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_5 @[IntervalSpec.scala 892:25]
    wire clippedValue_3 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_3 = clip(asInterval(UInt<3>("h3"), 3, 3, 2), clippedValue_3) @[IntervalSpec.scala 869:18]
    clippedValue_3 <= _clippedValue_T_3 @[IntervalSpec.scala 867:24]
    node _T_24 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_3) @[IntervalSpec.scala 878:43]
    node _T_25 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_26 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_24, UInt<1>("h1"), "") : assert_6 @[IntervalSpec.scala 878:25]
      node _T_27 = eq(_T_24, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_27 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_6 @[IntervalSpec.scala 878:25]
    wire wrappedValue_3 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_3 = wrap(asInterval(UInt<3>("h3"), 3, 3, 2), wrappedValue_3) @[IntervalSpec.scala 883:18]
    wrappedValue_3 <= _wrappedValue_T_3 @[IntervalSpec.scala 881:24]
    node _T_28 = eq(asInterval(UInt<6>("h14"), 20, 20, 2), wrappedValue_3) @[IntervalSpec.scala 892:43]
    node _T_29 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_30 = eq(_T_29, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_30 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_28, UInt<1>("h1"), "") : assert_7 @[IntervalSpec.scala 892:25]
      node _T_31 = eq(_T_28, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_31 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_7 @[IntervalSpec.scala 892:25]
    wire clippedValue_4 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_4 = clip(asInterval(UInt<4>("h4"), 4, 4, 2), clippedValue_4) @[IntervalSpec.scala 869:18]
    clippedValue_4 <= _clippedValue_T_4 @[IntervalSpec.scala 867:24]
    node _T_32 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_4) @[IntervalSpec.scala 878:43]
    node _T_33 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_34 = eq(_T_33, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_34 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_32, UInt<1>("h1"), "") : assert_8 @[IntervalSpec.scala 878:25]
      node _T_35 = eq(_T_32, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_35 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_8 @[IntervalSpec.scala 878:25]
    wire wrappedValue_4 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_4 = wrap(asInterval(UInt<4>("h4"), 4, 4, 2), wrappedValue_4) @[IntervalSpec.scala 883:18]
    wrappedValue_4 <= _wrappedValue_T_4 @[IntervalSpec.scala 881:24]
    node _T_36 = eq(asInterval(UInt<6>("h15"), 21, 21, 2), wrappedValue_4) @[IntervalSpec.scala 892:43]
    node _T_37 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_38 = eq(_T_37, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_38 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_36, UInt<1>("h1"), "") : assert_9 @[IntervalSpec.scala 892:25]
      node _T_39 = eq(_T_36, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_39 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_9 @[IntervalSpec.scala 892:25]
    wire clippedValue_5 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_5 = clip(asInterval(UInt<4>("h5"), 5, 5, 2), clippedValue_5) @[IntervalSpec.scala 869:18]
    clippedValue_5 <= _clippedValue_T_5 @[IntervalSpec.scala 867:24]
    node _T_40 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_5) @[IntervalSpec.scala 878:43]
    node _T_41 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_42 = eq(_T_41, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_42 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_40, UInt<1>("h1"), "") : assert_10 @[IntervalSpec.scala 878:25]
      node _T_43 = eq(_T_40, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_43 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_10 @[IntervalSpec.scala 878:25]
    wire wrappedValue_5 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_5 = wrap(asInterval(UInt<4>("h5"), 5, 5, 2), wrappedValue_5) @[IntervalSpec.scala 883:18]
    wrappedValue_5 <= _wrappedValue_T_5 @[IntervalSpec.scala 881:24]
    node _T_44 = eq(asInterval(UInt<6>("h16"), 22, 22, 2), wrappedValue_5) @[IntervalSpec.scala 892:43]
    node _T_45 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_46 = eq(_T_45, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_46 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_44, UInt<1>("h1"), "") : assert_11 @[IntervalSpec.scala 892:25]
      node _T_47 = eq(_T_44, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_47 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_11 @[IntervalSpec.scala 892:25]
    wire clippedValue_6 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_6 = clip(asInterval(UInt<4>("h6"), 6, 6, 2), clippedValue_6) @[IntervalSpec.scala 869:18]
    clippedValue_6 <= _clippedValue_T_6 @[IntervalSpec.scala 867:24]
    node _T_48 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_6) @[IntervalSpec.scala 878:43]
    node _T_49 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_50 = eq(_T_49, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_50 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_48, UInt<1>("h1"), "") : assert_12 @[IntervalSpec.scala 878:25]
      node _T_51 = eq(_T_48, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_51 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_12 @[IntervalSpec.scala 878:25]
    wire wrappedValue_6 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_6 = wrap(asInterval(UInt<4>("h6"), 6, 6, 2), wrappedValue_6) @[IntervalSpec.scala 883:18]
    wrappedValue_6 <= _wrappedValue_T_6 @[IntervalSpec.scala 881:24]
    node _T_52 = eq(asInterval(UInt<6>("h17"), 23, 23, 2), wrappedValue_6) @[IntervalSpec.scala 892:43]
    node _T_53 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_54 = eq(_T_53, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_54 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_52, UInt<1>("h1"), "") : assert_13 @[IntervalSpec.scala 892:25]
      node _T_55 = eq(_T_52, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_55 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_13 @[IntervalSpec.scala 892:25]
    wire clippedValue_7 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_7 = clip(asInterval(UInt<4>("h7"), 7, 7, 2), clippedValue_7) @[IntervalSpec.scala 869:18]
    clippedValue_7 <= _clippedValue_T_7 @[IntervalSpec.scala 867:24]
    node _T_56 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_7) @[IntervalSpec.scala 878:43]
    node _T_57 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_58 = eq(_T_57, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_58 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_56, UInt<1>("h1"), "") : assert_14 @[IntervalSpec.scala 878:25]
      node _T_59 = eq(_T_56, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_59 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_14 @[IntervalSpec.scala 878:25]
    wire wrappedValue_7 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_7 = wrap(asInterval(UInt<4>("h7"), 7, 7, 2), wrappedValue_7) @[IntervalSpec.scala 883:18]
    wrappedValue_7 <= _wrappedValue_T_7 @[IntervalSpec.scala 881:24]
    node _T_60 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), wrappedValue_7) @[IntervalSpec.scala 892:43]
    node _T_61 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_62 = eq(_T_61, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_62 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_60, UInt<1>("h1"), "") : assert_15 @[IntervalSpec.scala 892:25]
      node _T_63 = eq(_T_60, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_63 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_15 @[IntervalSpec.scala 892:25]
    wire clippedValue_8 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_8 = clip(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_8) @[IntervalSpec.scala 869:18]
    clippedValue_8 <= _clippedValue_T_8 @[IntervalSpec.scala 867:24]
    node _T_64 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), clippedValue_8) @[IntervalSpec.scala 878:43]
    node _T_65 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_66 = eq(_T_65, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_66 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_64, UInt<1>("h1"), "") : assert_16 @[IntervalSpec.scala 878:25]
      node _T_67 = eq(_T_64, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_67 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_16 @[IntervalSpec.scala 878:25]
    wire wrappedValue_8 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_8 = wrap(asInterval(UInt<5>("h8"), 8, 8, 2), wrappedValue_8) @[IntervalSpec.scala 883:18]
    wrappedValue_8 <= _wrappedValue_T_8 @[IntervalSpec.scala 881:24]
    node _T_68 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), wrappedValue_8) @[IntervalSpec.scala 892:43]
    node _T_69 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_70 = eq(_T_69, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_70 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_68, UInt<1>("h1"), "") : assert_17 @[IntervalSpec.scala 892:25]
      node _T_71 = eq(_T_68, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_71 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_17 @[IntervalSpec.scala 892:25]
    wire clippedValue_9 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_9 = clip(asInterval(UInt<5>("h9"), 9, 9, 2), clippedValue_9) @[IntervalSpec.scala 869:18]
    clippedValue_9 <= _clippedValue_T_9 @[IntervalSpec.scala 867:24]
    node _T_72 = eq(asInterval(UInt<5>("h9"), 9, 9, 2), clippedValue_9) @[IntervalSpec.scala 878:43]
    node _T_73 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_74 = eq(_T_73, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_74 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_72, UInt<1>("h1"), "") : assert_18 @[IntervalSpec.scala 878:25]
      node _T_75 = eq(_T_72, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_75 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_18 @[IntervalSpec.scala 878:25]
    wire wrappedValue_9 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_9 = wrap(asInterval(UInt<5>("h9"), 9, 9, 2), wrappedValue_9) @[IntervalSpec.scala 883:18]
    wrappedValue_9 <= _wrappedValue_T_9 @[IntervalSpec.scala 881:24]
    node _T_76 = eq(asInterval(UInt<5>("h9"), 9, 9, 2), wrappedValue_9) @[IntervalSpec.scala 892:43]
    node _T_77 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_78 = eq(_T_77, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_78 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_76, UInt<1>("h1"), "") : assert_19 @[IntervalSpec.scala 892:25]
      node _T_79 = eq(_T_76, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_79 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_19 @[IntervalSpec.scala 892:25]
    wire clippedValue_10 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_10 = clip(asInterval(UInt<5>("ha"), 10, 10, 2), clippedValue_10) @[IntervalSpec.scala 869:18]
    clippedValue_10 <= _clippedValue_T_10 @[IntervalSpec.scala 867:24]
    node _T_80 = eq(asInterval(UInt<5>("ha"), 10, 10, 2), clippedValue_10) @[IntervalSpec.scala 878:43]
    node _T_81 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_82 = eq(_T_81, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_82 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_80, UInt<1>("h1"), "") : assert_20 @[IntervalSpec.scala 878:25]
      node _T_83 = eq(_T_80, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_83 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_20 @[IntervalSpec.scala 878:25]
    wire wrappedValue_10 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_10 = wrap(asInterval(UInt<5>("ha"), 10, 10, 2), wrappedValue_10) @[IntervalSpec.scala 883:18]
    wrappedValue_10 <= _wrappedValue_T_10 @[IntervalSpec.scala 881:24]
    node _T_84 = eq(asInterval(UInt<5>("ha"), 10, 10, 2), wrappedValue_10) @[IntervalSpec.scala 892:43]
    node _T_85 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_86 = eq(_T_85, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_86 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_84, UInt<1>("h1"), "") : assert_21 @[IntervalSpec.scala 892:25]
      node _T_87 = eq(_T_84, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_87 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_21 @[IntervalSpec.scala 892:25]
    wire clippedValue_11 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_11 = clip(asInterval(UInt<5>("hb"), 11, 11, 2), clippedValue_11) @[IntervalSpec.scala 869:18]
    clippedValue_11 <= _clippedValue_T_11 @[IntervalSpec.scala 867:24]
    node _T_88 = eq(asInterval(UInt<5>("hb"), 11, 11, 2), clippedValue_11) @[IntervalSpec.scala 878:43]
    node _T_89 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_90 = eq(_T_89, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_90 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_88, UInt<1>("h1"), "") : assert_22 @[IntervalSpec.scala 878:25]
      node _T_91 = eq(_T_88, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_91 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_22 @[IntervalSpec.scala 878:25]
    wire wrappedValue_11 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_11 = wrap(asInterval(UInt<5>("hb"), 11, 11, 2), wrappedValue_11) @[IntervalSpec.scala 883:18]
    wrappedValue_11 <= _wrappedValue_T_11 @[IntervalSpec.scala 881:24]
    node _T_92 = eq(asInterval(UInt<5>("hb"), 11, 11, 2), wrappedValue_11) @[IntervalSpec.scala 892:43]
    node _T_93 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_94 = eq(_T_93, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_94 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_92, UInt<1>("h1"), "") : assert_23 @[IntervalSpec.scala 892:25]
      node _T_95 = eq(_T_92, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_95 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_23 @[IntervalSpec.scala 892:25]
    wire clippedValue_12 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_12 = clip(asInterval(UInt<5>("hc"), 12, 12, 2), clippedValue_12) @[IntervalSpec.scala 869:18]
    clippedValue_12 <= _clippedValue_T_12 @[IntervalSpec.scala 867:24]
    node _T_96 = eq(asInterval(UInt<5>("hc"), 12, 12, 2), clippedValue_12) @[IntervalSpec.scala 878:43]
    node _T_97 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_98 = eq(_T_97, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_98 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_96, UInt<1>("h1"), "") : assert_24 @[IntervalSpec.scala 878:25]
      node _T_99 = eq(_T_96, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_99 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_24 @[IntervalSpec.scala 878:25]
    wire wrappedValue_12 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_12 = wrap(asInterval(UInt<5>("hc"), 12, 12, 2), wrappedValue_12) @[IntervalSpec.scala 883:18]
    wrappedValue_12 <= _wrappedValue_T_12 @[IntervalSpec.scala 881:24]
    node _T_100 = eq(asInterval(UInt<5>("hc"), 12, 12, 2), wrappedValue_12) @[IntervalSpec.scala 892:43]
    node _T_101 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_102 = eq(_T_101, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_102 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_100, UInt<1>("h1"), "") : assert_25 @[IntervalSpec.scala 892:25]
      node _T_103 = eq(_T_100, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_103 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_25 @[IntervalSpec.scala 892:25]
    wire clippedValue_13 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_13 = clip(asInterval(UInt<5>("hd"), 13, 13, 2), clippedValue_13) @[IntervalSpec.scala 869:18]
    clippedValue_13 <= _clippedValue_T_13 @[IntervalSpec.scala 867:24]
    node _T_104 = eq(asInterval(UInt<5>("hd"), 13, 13, 2), clippedValue_13) @[IntervalSpec.scala 878:43]
    node _T_105 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_106 = eq(_T_105, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_106 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_104, UInt<1>("h1"), "") : assert_26 @[IntervalSpec.scala 878:25]
      node _T_107 = eq(_T_104, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_107 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_26 @[IntervalSpec.scala 878:25]
    wire wrappedValue_13 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_13 = wrap(asInterval(UInt<5>("hd"), 13, 13, 2), wrappedValue_13) @[IntervalSpec.scala 883:18]
    wrappedValue_13 <= _wrappedValue_T_13 @[IntervalSpec.scala 881:24]
    node _T_108 = eq(asInterval(UInt<5>("hd"), 13, 13, 2), wrappedValue_13) @[IntervalSpec.scala 892:43]
    node _T_109 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_110 = eq(_T_109, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_110 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_108, UInt<1>("h1"), "") : assert_27 @[IntervalSpec.scala 892:25]
      node _T_111 = eq(_T_108, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_111 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_27 @[IntervalSpec.scala 892:25]
    wire clippedValue_14 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_14 = clip(asInterval(UInt<5>("he"), 14, 14, 2), clippedValue_14) @[IntervalSpec.scala 869:18]
    clippedValue_14 <= _clippedValue_T_14 @[IntervalSpec.scala 867:24]
    node _T_112 = eq(asInterval(UInt<5>("he"), 14, 14, 2), clippedValue_14) @[IntervalSpec.scala 878:43]
    node _T_113 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_114 = eq(_T_113, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_114 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_112, UInt<1>("h1"), "") : assert_28 @[IntervalSpec.scala 878:25]
      node _T_115 = eq(_T_112, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_115 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_28 @[IntervalSpec.scala 878:25]
    wire wrappedValue_14 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_14 = wrap(asInterval(UInt<5>("he"), 14, 14, 2), wrappedValue_14) @[IntervalSpec.scala 883:18]
    wrappedValue_14 <= _wrappedValue_T_14 @[IntervalSpec.scala 881:24]
    node _T_116 = eq(asInterval(UInt<5>("he"), 14, 14, 2), wrappedValue_14) @[IntervalSpec.scala 892:43]
    node _T_117 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_118 = eq(_T_117, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_118 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_116, UInt<1>("h1"), "") : assert_29 @[IntervalSpec.scala 892:25]
      node _T_119 = eq(_T_116, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_119 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_29 @[IntervalSpec.scala 892:25]
    wire clippedValue_15 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_15 = clip(asInterval(UInt<5>("hf"), 15, 15, 2), clippedValue_15) @[IntervalSpec.scala 869:18]
    clippedValue_15 <= _clippedValue_T_15 @[IntervalSpec.scala 867:24]
    node _T_120 = eq(asInterval(UInt<5>("hf"), 15, 15, 2), clippedValue_15) @[IntervalSpec.scala 878:43]
    node _T_121 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_122 = eq(_T_121, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_122 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_120, UInt<1>("h1"), "") : assert_30 @[IntervalSpec.scala 878:25]
      node _T_123 = eq(_T_120, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_123 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_30 @[IntervalSpec.scala 878:25]
    wire wrappedValue_15 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_15 = wrap(asInterval(UInt<5>("hf"), 15, 15, 2), wrappedValue_15) @[IntervalSpec.scala 883:18]
    wrappedValue_15 <= _wrappedValue_T_15 @[IntervalSpec.scala 881:24]
    node _T_124 = eq(asInterval(UInt<5>("hf"), 15, 15, 2), wrappedValue_15) @[IntervalSpec.scala 892:43]
    node _T_125 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_126 = eq(_T_125, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_126 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_124, UInt<1>("h1"), "") : assert_31 @[IntervalSpec.scala 892:25]
      node _T_127 = eq(_T_124, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_127 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_31 @[IntervalSpec.scala 892:25]
    wire clippedValue_16 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_16 = clip(asInterval(UInt<6>("h10"), 16, 16, 2), clippedValue_16) @[IntervalSpec.scala 869:18]
    clippedValue_16 <= _clippedValue_T_16 @[IntervalSpec.scala 867:24]
    node _T_128 = eq(asInterval(UInt<6>("h10"), 16, 16, 2), clippedValue_16) @[IntervalSpec.scala 878:43]
    node _T_129 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_130 = eq(_T_129, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_130 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_128, UInt<1>("h1"), "") : assert_32 @[IntervalSpec.scala 878:25]
      node _T_131 = eq(_T_128, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_131 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_32 @[IntervalSpec.scala 878:25]
    wire wrappedValue_16 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_16 = wrap(asInterval(UInt<6>("h10"), 16, 16, 2), wrappedValue_16) @[IntervalSpec.scala 883:18]
    wrappedValue_16 <= _wrappedValue_T_16 @[IntervalSpec.scala 881:24]
    node _T_132 = eq(asInterval(UInt<6>("h10"), 16, 16, 2), wrappedValue_16) @[IntervalSpec.scala 892:43]
    node _T_133 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_134 = eq(_T_133, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_134 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_132, UInt<1>("h1"), "") : assert_33 @[IntervalSpec.scala 892:25]
      node _T_135 = eq(_T_132, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_135 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_33 @[IntervalSpec.scala 892:25]
    wire clippedValue_17 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_17 = clip(asInterval(UInt<6>("h11"), 17, 17, 2), clippedValue_17) @[IntervalSpec.scala 869:18]
    clippedValue_17 <= _clippedValue_T_17 @[IntervalSpec.scala 867:24]
    node _T_136 = eq(asInterval(UInt<6>("h11"), 17, 17, 2), clippedValue_17) @[IntervalSpec.scala 878:43]
    node _T_137 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_138 = eq(_T_137, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_138 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_136, UInt<1>("h1"), "") : assert_34 @[IntervalSpec.scala 878:25]
      node _T_139 = eq(_T_136, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_139 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_34 @[IntervalSpec.scala 878:25]
    wire wrappedValue_17 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_17 = wrap(asInterval(UInt<6>("h11"), 17, 17, 2), wrappedValue_17) @[IntervalSpec.scala 883:18]
    wrappedValue_17 <= _wrappedValue_T_17 @[IntervalSpec.scala 881:24]
    node _T_140 = eq(asInterval(UInt<6>("h11"), 17, 17, 2), wrappedValue_17) @[IntervalSpec.scala 892:43]
    node _T_141 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_142 = eq(_T_141, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_142 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_140, UInt<1>("h1"), "") : assert_35 @[IntervalSpec.scala 892:25]
      node _T_143 = eq(_T_140, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_143 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_35 @[IntervalSpec.scala 892:25]
    wire clippedValue_18 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_18 = clip(asInterval(UInt<6>("h12"), 18, 18, 2), clippedValue_18) @[IntervalSpec.scala 869:18]
    clippedValue_18 <= _clippedValue_T_18 @[IntervalSpec.scala 867:24]
    node _T_144 = eq(asInterval(UInt<6>("h12"), 18, 18, 2), clippedValue_18) @[IntervalSpec.scala 878:43]
    node _T_145 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_146 = eq(_T_145, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_146 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_144, UInt<1>("h1"), "") : assert_36 @[IntervalSpec.scala 878:25]
      node _T_147 = eq(_T_144, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_147 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_36 @[IntervalSpec.scala 878:25]
    wire wrappedValue_18 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_18 = wrap(asInterval(UInt<6>("h12"), 18, 18, 2), wrappedValue_18) @[IntervalSpec.scala 883:18]
    wrappedValue_18 <= _wrappedValue_T_18 @[IntervalSpec.scala 881:24]
    node _T_148 = eq(asInterval(UInt<6>("h12"), 18, 18, 2), wrappedValue_18) @[IntervalSpec.scala 892:43]
    node _T_149 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_150 = eq(_T_149, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_150 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_148, UInt<1>("h1"), "") : assert_37 @[IntervalSpec.scala 892:25]
      node _T_151 = eq(_T_148, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_151 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_37 @[IntervalSpec.scala 892:25]
    wire clippedValue_19 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_19 = clip(asInterval(UInt<6>("h13"), 19, 19, 2), clippedValue_19) @[IntervalSpec.scala 869:18]
    clippedValue_19 <= _clippedValue_T_19 @[IntervalSpec.scala 867:24]
    node _T_152 = eq(asInterval(UInt<6>("h13"), 19, 19, 2), clippedValue_19) @[IntervalSpec.scala 878:43]
    node _T_153 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_154 = eq(_T_153, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_154 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_152, UInt<1>("h1"), "") : assert_38 @[IntervalSpec.scala 878:25]
      node _T_155 = eq(_T_152, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_155 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_38 @[IntervalSpec.scala 878:25]
    wire wrappedValue_19 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_19 = wrap(asInterval(UInt<6>("h13"), 19, 19, 2), wrappedValue_19) @[IntervalSpec.scala 883:18]
    wrappedValue_19 <= _wrappedValue_T_19 @[IntervalSpec.scala 881:24]
    node _T_156 = eq(asInterval(UInt<6>("h13"), 19, 19, 2), wrappedValue_19) @[IntervalSpec.scala 892:43]
    node _T_157 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_158 = eq(_T_157, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_158 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_156, UInt<1>("h1"), "") : assert_39 @[IntervalSpec.scala 892:25]
      node _T_159 = eq(_T_156, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_159 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_39 @[IntervalSpec.scala 892:25]
    wire clippedValue_20 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_20 = clip(asInterval(UInt<6>("h14"), 20, 20, 2), clippedValue_20) @[IntervalSpec.scala 869:18]
    clippedValue_20 <= _clippedValue_T_20 @[IntervalSpec.scala 867:24]
    node _T_160 = eq(asInterval(UInt<6>("h14"), 20, 20, 2), clippedValue_20) @[IntervalSpec.scala 878:43]
    node _T_161 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_162 = eq(_T_161, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_162 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_160, UInt<1>("h1"), "") : assert_40 @[IntervalSpec.scala 878:25]
      node _T_163 = eq(_T_160, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_163 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_40 @[IntervalSpec.scala 878:25]
    wire wrappedValue_20 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_20 = wrap(asInterval(UInt<6>("h14"), 20, 20, 2), wrappedValue_20) @[IntervalSpec.scala 883:18]
    wrappedValue_20 <= _wrappedValue_T_20 @[IntervalSpec.scala 881:24]
    node _T_164 = eq(asInterval(UInt<6>("h14"), 20, 20, 2), wrappedValue_20) @[IntervalSpec.scala 892:43]
    node _T_165 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_166 = eq(_T_165, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_166 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_164, UInt<1>("h1"), "") : assert_41 @[IntervalSpec.scala 892:25]
      node _T_167 = eq(_T_164, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_167 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_41 @[IntervalSpec.scala 892:25]
    wire clippedValue_21 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_21 = clip(asInterval(UInt<6>("h15"), 21, 21, 2), clippedValue_21) @[IntervalSpec.scala 869:18]
    clippedValue_21 <= _clippedValue_T_21 @[IntervalSpec.scala 867:24]
    node _T_168 = eq(asInterval(UInt<6>("h15"), 21, 21, 2), clippedValue_21) @[IntervalSpec.scala 878:43]
    node _T_169 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_170 = eq(_T_169, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_170 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_168, UInt<1>("h1"), "") : assert_42 @[IntervalSpec.scala 878:25]
      node _T_171 = eq(_T_168, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_171 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_42 @[IntervalSpec.scala 878:25]
    wire wrappedValue_21 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_21 = wrap(asInterval(UInt<6>("h15"), 21, 21, 2), wrappedValue_21) @[IntervalSpec.scala 883:18]
    wrappedValue_21 <= _wrappedValue_T_21 @[IntervalSpec.scala 881:24]
    node _T_172 = eq(asInterval(UInt<6>("h15"), 21, 21, 2), wrappedValue_21) @[IntervalSpec.scala 892:43]
    node _T_173 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_174 = eq(_T_173, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_174 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_172, UInt<1>("h1"), "") : assert_43 @[IntervalSpec.scala 892:25]
      node _T_175 = eq(_T_172, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_175 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_43 @[IntervalSpec.scala 892:25]
    wire clippedValue_22 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_22 = clip(asInterval(UInt<6>("h16"), 22, 22, 2), clippedValue_22) @[IntervalSpec.scala 869:18]
    clippedValue_22 <= _clippedValue_T_22 @[IntervalSpec.scala 867:24]
    node _T_176 = eq(asInterval(UInt<6>("h16"), 22, 22, 2), clippedValue_22) @[IntervalSpec.scala 878:43]
    node _T_177 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_178 = eq(_T_177, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_178 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_176, UInt<1>("h1"), "") : assert_44 @[IntervalSpec.scala 878:25]
      node _T_179 = eq(_T_176, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_179 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_44 @[IntervalSpec.scala 878:25]
    wire wrappedValue_22 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_22 = wrap(asInterval(UInt<6>("h16"), 22, 22, 2), wrappedValue_22) @[IntervalSpec.scala 883:18]
    wrappedValue_22 <= _wrappedValue_T_22 @[IntervalSpec.scala 881:24]
    node _T_180 = eq(asInterval(UInt<6>("h16"), 22, 22, 2), wrappedValue_22) @[IntervalSpec.scala 892:43]
    node _T_181 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_182 = eq(_T_181, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_182 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_180, UInt<1>("h1"), "") : assert_45 @[IntervalSpec.scala 892:25]
      node _T_183 = eq(_T_180, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_183 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_45 @[IntervalSpec.scala 892:25]
    wire clippedValue_23 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_23 = clip(asInterval(UInt<6>("h17"), 23, 23, 2), clippedValue_23) @[IntervalSpec.scala 869:18]
    clippedValue_23 <= _clippedValue_T_23 @[IntervalSpec.scala 867:24]
    node _T_184 = eq(asInterval(UInt<6>("h17"), 23, 23, 2), clippedValue_23) @[IntervalSpec.scala 878:43]
    node _T_185 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_186 = eq(_T_185, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_186 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_184, UInt<1>("h1"), "") : assert_46 @[IntervalSpec.scala 878:25]
      node _T_187 = eq(_T_184, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_187 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_46 @[IntervalSpec.scala 878:25]
    wire wrappedValue_23 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_23 = wrap(asInterval(UInt<6>("h17"), 23, 23, 2), wrappedValue_23) @[IntervalSpec.scala 883:18]
    wrappedValue_23 <= _wrappedValue_T_23 @[IntervalSpec.scala 881:24]
    node _T_188 = eq(asInterval(UInt<6>("h17"), 23, 23, 2), wrappedValue_23) @[IntervalSpec.scala 892:43]
    node _T_189 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_190 = eq(_T_189, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_190 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_188, UInt<1>("h1"), "") : assert_47 @[IntervalSpec.scala 892:25]
      node _T_191 = eq(_T_188, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_191 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_47 @[IntervalSpec.scala 892:25]
    wire clippedValue_24 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_24 = clip(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_24) @[IntervalSpec.scala 869:18]
    clippedValue_24 <= _clippedValue_T_24 @[IntervalSpec.scala 867:24]
    node _T_192 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_24) @[IntervalSpec.scala 878:43]
    node _T_193 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_194 = eq(_T_193, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_194 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_192, UInt<1>("h1"), "") : assert_48 @[IntervalSpec.scala 878:25]
      node _T_195 = eq(_T_192, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_195 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_48 @[IntervalSpec.scala 878:25]
    wire wrappedValue_24 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_24 = wrap(asInterval(UInt<6>("h18"), 24, 24, 2), wrappedValue_24) @[IntervalSpec.scala 883:18]
    wrappedValue_24 <= _wrappedValue_T_24 @[IntervalSpec.scala 881:24]
    node _T_196 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), wrappedValue_24) @[IntervalSpec.scala 892:43]
    node _T_197 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_198 = eq(_T_197, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_198 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_196, UInt<1>("h1"), "") : assert_49 @[IntervalSpec.scala 892:25]
      node _T_199 = eq(_T_196, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_199 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_49 @[IntervalSpec.scala 892:25]
    wire clippedValue_25 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_25 = clip(asInterval(UInt<6>("h19"), 25, 25, 2), clippedValue_25) @[IntervalSpec.scala 869:18]
    clippedValue_25 <= _clippedValue_T_25 @[IntervalSpec.scala 867:24]
    node _T_200 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_25) @[IntervalSpec.scala 878:43]
    node _T_201 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_202 = eq(_T_201, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_202 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_200, UInt<1>("h1"), "") : assert_50 @[IntervalSpec.scala 878:25]
      node _T_203 = eq(_T_200, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_203 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_50 @[IntervalSpec.scala 878:25]
    wire wrappedValue_25 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_25 = wrap(asInterval(UInt<6>("h19"), 25, 25, 2), wrappedValue_25) @[IntervalSpec.scala 883:18]
    wrappedValue_25 <= _wrappedValue_T_25 @[IntervalSpec.scala 881:24]
    node _T_204 = eq(asInterval(UInt<5>("h8"), 8, 8, 2), wrappedValue_25) @[IntervalSpec.scala 892:43]
    node _T_205 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_206 = eq(_T_205, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_206 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_204, UInt<1>("h1"), "") : assert_51 @[IntervalSpec.scala 892:25]
      node _T_207 = eq(_T_204, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_207 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_51 @[IntervalSpec.scala 892:25]
    wire clippedValue_26 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_26 = clip(asInterval(UInt<6>("h1a"), 26, 26, 2), clippedValue_26) @[IntervalSpec.scala 869:18]
    clippedValue_26 <= _clippedValue_T_26 @[IntervalSpec.scala 867:24]
    node _T_208 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_26) @[IntervalSpec.scala 878:43]
    node _T_209 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_210 = eq(_T_209, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_210 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_208, UInt<1>("h1"), "") : assert_52 @[IntervalSpec.scala 878:25]
      node _T_211 = eq(_T_208, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_211 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_52 @[IntervalSpec.scala 878:25]
    wire wrappedValue_26 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_26 = wrap(asInterval(UInt<6>("h1a"), 26, 26, 2), wrappedValue_26) @[IntervalSpec.scala 883:18]
    wrappedValue_26 <= _wrappedValue_T_26 @[IntervalSpec.scala 881:24]
    node _T_212 = eq(asInterval(UInt<5>("h9"), 9, 9, 2), wrappedValue_26) @[IntervalSpec.scala 892:43]
    node _T_213 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_214 = eq(_T_213, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_214 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_212, UInt<1>("h1"), "") : assert_53 @[IntervalSpec.scala 892:25]
      node _T_215 = eq(_T_212, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_215 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_53 @[IntervalSpec.scala 892:25]
    wire clippedValue_27 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_27 = clip(asInterval(UInt<6>("h1b"), 27, 27, 2), clippedValue_27) @[IntervalSpec.scala 869:18]
    clippedValue_27 <= _clippedValue_T_27 @[IntervalSpec.scala 867:24]
    node _T_216 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_27) @[IntervalSpec.scala 878:43]
    node _T_217 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_218 = eq(_T_217, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_218 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_216, UInt<1>("h1"), "") : assert_54 @[IntervalSpec.scala 878:25]
      node _T_219 = eq(_T_216, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_219 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_54 @[IntervalSpec.scala 878:25]
    wire wrappedValue_27 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_27 = wrap(asInterval(UInt<6>("h1b"), 27, 27, 2), wrappedValue_27) @[IntervalSpec.scala 883:18]
    wrappedValue_27 <= _wrappedValue_T_27 @[IntervalSpec.scala 881:24]
    node _T_220 = eq(asInterval(UInt<5>("ha"), 10, 10, 2), wrappedValue_27) @[IntervalSpec.scala 892:43]
    node _T_221 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_222 = eq(_T_221, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_222 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_220, UInt<1>("h1"), "") : assert_55 @[IntervalSpec.scala 892:25]
      node _T_223 = eq(_T_220, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_223 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_55 @[IntervalSpec.scala 892:25]
    wire clippedValue_28 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_28 = clip(asInterval(UInt<6>("h1c"), 28, 28, 2), clippedValue_28) @[IntervalSpec.scala 869:18]
    clippedValue_28 <= _clippedValue_T_28 @[IntervalSpec.scala 867:24]
    node _T_224 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_28) @[IntervalSpec.scala 878:43]
    node _T_225 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_226 = eq(_T_225, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_226 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_224, UInt<1>("h1"), "") : assert_56 @[IntervalSpec.scala 878:25]
      node _T_227 = eq(_T_224, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_227 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_56 @[IntervalSpec.scala 878:25]
    wire wrappedValue_28 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_28 = wrap(asInterval(UInt<6>("h1c"), 28, 28, 2), wrappedValue_28) @[IntervalSpec.scala 883:18]
    wrappedValue_28 <= _wrappedValue_T_28 @[IntervalSpec.scala 881:24]
    node _T_228 = eq(asInterval(UInt<5>("hb"), 11, 11, 2), wrappedValue_28) @[IntervalSpec.scala 892:43]
    node _T_229 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_230 = eq(_T_229, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_230 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_228, UInt<1>("h1"), "") : assert_57 @[IntervalSpec.scala 892:25]
      node _T_231 = eq(_T_228, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_231 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_57 @[IntervalSpec.scala 892:25]
    wire clippedValue_29 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_29 = clip(asInterval(UInt<6>("h1d"), 29, 29, 2), clippedValue_29) @[IntervalSpec.scala 869:18]
    clippedValue_29 <= _clippedValue_T_29 @[IntervalSpec.scala 867:24]
    node _T_232 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_29) @[IntervalSpec.scala 878:43]
    node _T_233 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_234 = eq(_T_233, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_234 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_232, UInt<1>("h1"), "") : assert_58 @[IntervalSpec.scala 878:25]
      node _T_235 = eq(_T_232, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_235 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_58 @[IntervalSpec.scala 878:25]
    wire wrappedValue_29 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_29 = wrap(asInterval(UInt<6>("h1d"), 29, 29, 2), wrappedValue_29) @[IntervalSpec.scala 883:18]
    wrappedValue_29 <= _wrappedValue_T_29 @[IntervalSpec.scala 881:24]
    node _T_236 = eq(asInterval(UInt<5>("hc"), 12, 12, 2), wrappedValue_29) @[IntervalSpec.scala 892:43]
    node _T_237 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_238 = eq(_T_237, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_238 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_236, UInt<1>("h1"), "") : assert_59 @[IntervalSpec.scala 892:25]
      node _T_239 = eq(_T_236, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_239 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_59 @[IntervalSpec.scala 892:25]
    wire clippedValue_30 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_30 = clip(asInterval(UInt<6>("h1e"), 30, 30, 2), clippedValue_30) @[IntervalSpec.scala 869:18]
    clippedValue_30 <= _clippedValue_T_30 @[IntervalSpec.scala 867:24]
    node _T_240 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_30) @[IntervalSpec.scala 878:43]
    node _T_241 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_242 = eq(_T_241, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_242 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_240, UInt<1>("h1"), "") : assert_60 @[IntervalSpec.scala 878:25]
      node _T_243 = eq(_T_240, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_243 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_60 @[IntervalSpec.scala 878:25]
    wire wrappedValue_30 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_30 = wrap(asInterval(UInt<6>("h1e"), 30, 30, 2), wrappedValue_30) @[IntervalSpec.scala 883:18]
    wrappedValue_30 <= _wrappedValue_T_30 @[IntervalSpec.scala 881:24]
    node _T_244 = eq(asInterval(UInt<5>("hd"), 13, 13, 2), wrappedValue_30) @[IntervalSpec.scala 892:43]
    node _T_245 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_246 = eq(_T_245, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_246 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_244, UInt<1>("h1"), "") : assert_61 @[IntervalSpec.scala 892:25]
      node _T_247 = eq(_T_244, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_247 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_61 @[IntervalSpec.scala 892:25]
    wire clippedValue_31 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_31 = clip(asInterval(UInt<6>("h1f"), 31, 31, 2), clippedValue_31) @[IntervalSpec.scala 869:18]
    clippedValue_31 <= _clippedValue_T_31 @[IntervalSpec.scala 867:24]
    node _T_248 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_31) @[IntervalSpec.scala 878:43]
    node _T_249 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_250 = eq(_T_249, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_250 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_248, UInt<1>("h1"), "") : assert_62 @[IntervalSpec.scala 878:25]
      node _T_251 = eq(_T_248, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_251 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_62 @[IntervalSpec.scala 878:25]
    wire wrappedValue_31 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_31 = wrap(asInterval(UInt<6>("h1f"), 31, 31, 2), wrappedValue_31) @[IntervalSpec.scala 883:18]
    wrappedValue_31 <= _wrappedValue_T_31 @[IntervalSpec.scala 881:24]
    node _T_252 = eq(asInterval(UInt<5>("he"), 14, 14, 2), wrappedValue_31) @[IntervalSpec.scala 892:43]
    node _T_253 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_254 = eq(_T_253, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_254 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_252, UInt<1>("h1"), "") : assert_63 @[IntervalSpec.scala 892:25]
      node _T_255 = eq(_T_252, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_255 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_63 @[IntervalSpec.scala 892:25]
    wire clippedValue_32 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_32 = clip(asInterval(UInt<7>("h20"), 32, 32, 2), clippedValue_32) @[IntervalSpec.scala 869:18]
    clippedValue_32 <= _clippedValue_T_32 @[IntervalSpec.scala 867:24]
    node _T_256 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_32) @[IntervalSpec.scala 878:43]
    node _T_257 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_258 = eq(_T_257, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_258 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_256, UInt<1>("h1"), "") : assert_64 @[IntervalSpec.scala 878:25]
      node _T_259 = eq(_T_256, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_259 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_64 @[IntervalSpec.scala 878:25]
    wire wrappedValue_32 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_32 = wrap(asInterval(UInt<7>("h20"), 32, 32, 2), wrappedValue_32) @[IntervalSpec.scala 883:18]
    wrappedValue_32 <= _wrappedValue_T_32 @[IntervalSpec.scala 881:24]
    node _T_260 = eq(asInterval(UInt<5>("hf"), 15, 15, 2), wrappedValue_32) @[IntervalSpec.scala 892:43]
    node _T_261 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_262 = eq(_T_261, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_262 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_260, UInt<1>("h1"), "") : assert_65 @[IntervalSpec.scala 892:25]
      node _T_263 = eq(_T_260, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_263 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_65 @[IntervalSpec.scala 892:25]
    wire clippedValue_33 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_33 = clip(asInterval(UInt<7>("h21"), 33, 33, 2), clippedValue_33) @[IntervalSpec.scala 869:18]
    clippedValue_33 <= _clippedValue_T_33 @[IntervalSpec.scala 867:24]
    node _T_264 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_33) @[IntervalSpec.scala 878:43]
    node _T_265 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_266 = eq(_T_265, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_266 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_264, UInt<1>("h1"), "") : assert_66 @[IntervalSpec.scala 878:25]
      node _T_267 = eq(_T_264, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_267 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_66 @[IntervalSpec.scala 878:25]
    wire wrappedValue_33 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_33 = wrap(asInterval(UInt<7>("h21"), 33, 33, 2), wrappedValue_33) @[IntervalSpec.scala 883:18]
    wrappedValue_33 <= _wrappedValue_T_33 @[IntervalSpec.scala 881:24]
    node _T_268 = eq(asInterval(UInt<6>("h10"), 16, 16, 2), wrappedValue_33) @[IntervalSpec.scala 892:43]
    node _T_269 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_270 = eq(_T_269, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_270 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_268, UInt<1>("h1"), "") : assert_67 @[IntervalSpec.scala 892:25]
      node _T_271 = eq(_T_268, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_271 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_67 @[IntervalSpec.scala 892:25]
    wire clippedValue_34 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_34 = clip(asInterval(UInt<7>("h22"), 34, 34, 2), clippedValue_34) @[IntervalSpec.scala 869:18]
    clippedValue_34 <= _clippedValue_T_34 @[IntervalSpec.scala 867:24]
    node _T_272 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_34) @[IntervalSpec.scala 878:43]
    node _T_273 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_274 = eq(_T_273, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_274 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_272, UInt<1>("h1"), "") : assert_68 @[IntervalSpec.scala 878:25]
      node _T_275 = eq(_T_272, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_275 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_68 @[IntervalSpec.scala 878:25]
    wire wrappedValue_34 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_34 = wrap(asInterval(UInt<7>("h22"), 34, 34, 2), wrappedValue_34) @[IntervalSpec.scala 883:18]
    wrappedValue_34 <= _wrappedValue_T_34 @[IntervalSpec.scala 881:24]
    node _T_276 = eq(asInterval(UInt<6>("h11"), 17, 17, 2), wrappedValue_34) @[IntervalSpec.scala 892:43]
    node _T_277 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_278 = eq(_T_277, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_278 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_276, UInt<1>("h1"), "") : assert_69 @[IntervalSpec.scala 892:25]
      node _T_279 = eq(_T_276, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_279 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_69 @[IntervalSpec.scala 892:25]
    wire clippedValue_35 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_35 = clip(asInterval(UInt<7>("h23"), 35, 35, 2), clippedValue_35) @[IntervalSpec.scala 869:18]
    clippedValue_35 <= _clippedValue_T_35 @[IntervalSpec.scala 867:24]
    node _T_280 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_35) @[IntervalSpec.scala 878:43]
    node _T_281 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_282 = eq(_T_281, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_282 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_280, UInt<1>("h1"), "") : assert_70 @[IntervalSpec.scala 878:25]
      node _T_283 = eq(_T_280, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_283 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_70 @[IntervalSpec.scala 878:25]
    wire wrappedValue_35 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_35 = wrap(asInterval(UInt<7>("h23"), 35, 35, 2), wrappedValue_35) @[IntervalSpec.scala 883:18]
    wrappedValue_35 <= _wrappedValue_T_35 @[IntervalSpec.scala 881:24]
    node _T_284 = eq(asInterval(UInt<6>("h12"), 18, 18, 2), wrappedValue_35) @[IntervalSpec.scala 892:43]
    node _T_285 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_286 = eq(_T_285, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_286 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_284, UInt<1>("h1"), "") : assert_71 @[IntervalSpec.scala 892:25]
      node _T_287 = eq(_T_284, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_287 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_71 @[IntervalSpec.scala 892:25]
    wire clippedValue_36 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_36 = clip(asInterval(UInt<7>("h24"), 36, 36, 2), clippedValue_36) @[IntervalSpec.scala 869:18]
    clippedValue_36 <= _clippedValue_T_36 @[IntervalSpec.scala 867:24]
    node _T_288 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_36) @[IntervalSpec.scala 878:43]
    node _T_289 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_290 = eq(_T_289, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_290 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_288, UInt<1>("h1"), "") : assert_72 @[IntervalSpec.scala 878:25]
      node _T_291 = eq(_T_288, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_291 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_72 @[IntervalSpec.scala 878:25]
    wire wrappedValue_36 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_36 = wrap(asInterval(UInt<7>("h24"), 36, 36, 2), wrappedValue_36) @[IntervalSpec.scala 883:18]
    wrappedValue_36 <= _wrappedValue_T_36 @[IntervalSpec.scala 881:24]
    node _T_292 = eq(asInterval(UInt<6>("h13"), 19, 19, 2), wrappedValue_36) @[IntervalSpec.scala 892:43]
    node _T_293 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_294 = eq(_T_293, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_294 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_292, UInt<1>("h1"), "") : assert_73 @[IntervalSpec.scala 892:25]
      node _T_295 = eq(_T_292, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_295 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_73 @[IntervalSpec.scala 892:25]
    wire clippedValue_37 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_37 = clip(asInterval(UInt<7>("h25"), 37, 37, 2), clippedValue_37) @[IntervalSpec.scala 869:18]
    clippedValue_37 <= _clippedValue_T_37 @[IntervalSpec.scala 867:24]
    node _T_296 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_37) @[IntervalSpec.scala 878:43]
    node _T_297 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_298 = eq(_T_297, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_298 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_296, UInt<1>("h1"), "") : assert_74 @[IntervalSpec.scala 878:25]
      node _T_299 = eq(_T_296, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_299 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_74 @[IntervalSpec.scala 878:25]
    wire wrappedValue_37 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_37 = wrap(asInterval(UInt<7>("h25"), 37, 37, 2), wrappedValue_37) @[IntervalSpec.scala 883:18]
    wrappedValue_37 <= _wrappedValue_T_37 @[IntervalSpec.scala 881:24]
    node _T_300 = eq(asInterval(UInt<6>("h14"), 20, 20, 2), wrappedValue_37) @[IntervalSpec.scala 892:43]
    node _T_301 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_302 = eq(_T_301, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_302 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_300, UInt<1>("h1"), "") : assert_75 @[IntervalSpec.scala 892:25]
      node _T_303 = eq(_T_300, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_303 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_75 @[IntervalSpec.scala 892:25]
    wire clippedValue_38 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_38 = clip(asInterval(UInt<7>("h26"), 38, 38, 2), clippedValue_38) @[IntervalSpec.scala 869:18]
    clippedValue_38 <= _clippedValue_T_38 @[IntervalSpec.scala 867:24]
    node _T_304 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_38) @[IntervalSpec.scala 878:43]
    node _T_305 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_306 = eq(_T_305, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_306 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_304, UInt<1>("h1"), "") : assert_76 @[IntervalSpec.scala 878:25]
      node _T_307 = eq(_T_304, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_307 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_76 @[IntervalSpec.scala 878:25]
    wire wrappedValue_38 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_38 = wrap(asInterval(UInt<7>("h26"), 38, 38, 2), wrappedValue_38) @[IntervalSpec.scala 883:18]
    wrappedValue_38 <= _wrappedValue_T_38 @[IntervalSpec.scala 881:24]
    node _T_308 = eq(asInterval(UInt<6>("h15"), 21, 21, 2), wrappedValue_38) @[IntervalSpec.scala 892:43]
    node _T_309 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_310 = eq(_T_309, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_310 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_308, UInt<1>("h1"), "") : assert_77 @[IntervalSpec.scala 892:25]
      node _T_311 = eq(_T_308, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_311 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_77 @[IntervalSpec.scala 892:25]
    wire clippedValue_39 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_39 = clip(asInterval(UInt<7>("h27"), 39, 39, 2), clippedValue_39) @[IntervalSpec.scala 869:18]
    clippedValue_39 <= _clippedValue_T_39 @[IntervalSpec.scala 867:24]
    node _T_312 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_39) @[IntervalSpec.scala 878:43]
    node _T_313 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_314 = eq(_T_313, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_314 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_312, UInt<1>("h1"), "") : assert_78 @[IntervalSpec.scala 878:25]
      node _T_315 = eq(_T_312, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_315 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_78 @[IntervalSpec.scala 878:25]
    wire wrappedValue_39 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_39 = wrap(asInterval(UInt<7>("h27"), 39, 39, 2), wrappedValue_39) @[IntervalSpec.scala 883:18]
    wrappedValue_39 <= _wrappedValue_T_39 @[IntervalSpec.scala 881:24]
    node _T_316 = eq(asInterval(UInt<6>("h16"), 22, 22, 2), wrappedValue_39) @[IntervalSpec.scala 892:43]
    node _T_317 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_318 = eq(_T_317, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_318 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_316, UInt<1>("h1"), "") : assert_79 @[IntervalSpec.scala 892:25]
      node _T_319 = eq(_T_316, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_319 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_79 @[IntervalSpec.scala 892:25]
    wire clippedValue_40 : Interval[2, 6].2 @[IntervalSpec.scala 866:34]
    node _clippedValue_T_40 = clip(asInterval(UInt<7>("h28"), 40, 40, 2), clippedValue_40) @[IntervalSpec.scala 869:18]
    clippedValue_40 <= _clippedValue_T_40 @[IntervalSpec.scala 867:24]
    node _T_320 = eq(asInterval(UInt<6>("h18"), 24, 24, 2), clippedValue_40) @[IntervalSpec.scala 878:43]
    node _T_321 = bits(reset, 0, 0) @[IntervalSpec.scala 878:25]
    node _T_322 = eq(_T_321, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
    when _T_322 : @[IntervalSpec.scala 878:25]
      assert(clock, _T_320, UInt<1>("h1"), "") : assert_80 @[IntervalSpec.scala 878:25]
      node _T_323 = eq(_T_320, UInt<1>("h0")) @[IntervalSpec.scala 878:25]
      when _T_323 : @[IntervalSpec.scala 878:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:878 chisel3.assert(goldClippedValue === clippedValue)\n") : printf_80 @[IntervalSpec.scala 878:25]
    wire wrappedValue_40 : Interval[2, 6].2 @[IntervalSpec.scala 880:34]
    node _wrappedValue_T_40 = wrap(asInterval(UInt<7>("h28"), 40, 40, 2), wrappedValue_40) @[IntervalSpec.scala 883:18]
    wrappedValue_40 <= _wrappedValue_T_40 @[IntervalSpec.scala 881:24]
    node _T_324 = eq(asInterval(UInt<6>("h17"), 23, 23, 2), wrappedValue_40) @[IntervalSpec.scala 892:43]
    node _T_325 = bits(reset, 0, 0) @[IntervalSpec.scala 892:25]
    node _T_326 = eq(_T_325, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
    when _T_326 : @[IntervalSpec.scala 892:25]
      assert(clock, _T_324, UInt<1>("h1"), "") : assert_81 @[IntervalSpec.scala 892:25]
      node _T_327 = eq(_T_324, UInt<1>("h0")) @[IntervalSpec.scala 892:25]
      when _T_327 : @[IntervalSpec.scala 892:25]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at IntervalSpec.scala:892 chisel3.assert(goldWrappedValue === wrappedValue)\n") : printf_81 @[IntervalSpec.scala 892:25]
    node _T_328 = bits(reset, 0, 0) @[IntervalSpec.scala 895:13]
    node _T_329 = eq(_T_328, UInt<1>("h0")) @[IntervalSpec.scala 895:13]
    when _T_329 : @[IntervalSpec.scala 895:13]
      stop(clock, UInt<1>("h1"), 0) : stop @[IntervalSpec.scala 895:13]
