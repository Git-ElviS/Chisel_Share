circuit FixedPointMuxTester :
  module FixedPointMuxTester :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    wire unknownFixed : Fixed @[FixedPointSpec.scala 104:26]
    unknownFixed <= asFixedPoint(UInt<2>("h1"), 2) @[FixedPointSpec.scala 105:16]
    node _T = mux(UInt<1>("h1"), asFixedPoint(UInt<4>("h6"), 0), asFixedPoint(UInt<2>("h1"), 2)) @[FixedPointSpec.scala 107:13]
    node _T_1 = eq(_T, asFixedPoint(UInt<4>("h6"), 0)) @[FixedPointSpec.scala 107:71]
    node _T_2 = bits(reset, 0, 0) @[FixedPointSpec.scala 107:9]
    node _T_3 = eq(_T_2, UInt<1>("h0")) @[FixedPointSpec.scala 107:9]
    when _T_3 : @[FixedPointSpec.scala 107:9]
      assert(clock, _T_1, UInt<1>("h1"), "") : assert @[FixedPointSpec.scala 107:9]
      node _T_4 = eq(_T_1, UInt<1>("h0")) @[FixedPointSpec.scala 107:9]
      when _T_4 : @[FixedPointSpec.scala 107:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at FixedPointSpec.scala:107 assert(Mux(true.B, largeWidthLowPrecision, smallWidthHighPrecision) === 6.0.F(0.BP))\n") : printf @[FixedPointSpec.scala 107:9]
    node _T_5 = mux(UInt<1>("h0"), asFixedPoint(UInt<4>("h6"), 0), asFixedPoint(UInt<2>("h1"), 2)) @[FixedPointSpec.scala 108:13]
    node _T_6 = eq(_T_5, asFixedPoint(UInt<2>("h1"), 2)) @[FixedPointSpec.scala 108:72]
    node _T_7 = bits(reset, 0, 0) @[FixedPointSpec.scala 108:9]
    node _T_8 = eq(_T_7, UInt<1>("h0")) @[FixedPointSpec.scala 108:9]
    when _T_8 : @[FixedPointSpec.scala 108:9]
      assert(clock, _T_6, UInt<1>("h1"), "") : assert_1 @[FixedPointSpec.scala 108:9]
      node _T_9 = eq(_T_6, UInt<1>("h0")) @[FixedPointSpec.scala 108:9]
      when _T_9 : @[FixedPointSpec.scala 108:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at FixedPointSpec.scala:108 assert(Mux(false.B, largeWidthLowPrecision, smallWidthHighPrecision) === 0.25.F(2.BP))\n") : printf_1 @[FixedPointSpec.scala 108:9]
    node _T_10 = mux(UInt<1>("h0"), asFixedPoint(UInt<4>("h6"), 0), unknownFixed) @[FixedPointSpec.scala 109:13]
    node _T_11 = eq(_T_10, asFixedPoint(UInt<2>("h1"), 2)) @[FixedPointSpec.scala 109:61]
    node _T_12 = bits(reset, 0, 0) @[FixedPointSpec.scala 109:9]
    node _T_13 = eq(_T_12, UInt<1>("h0")) @[FixedPointSpec.scala 109:9]
    when _T_13 : @[FixedPointSpec.scala 109:9]
      assert(clock, _T_11, UInt<1>("h1"), "") : assert_2 @[FixedPointSpec.scala 109:9]
      node _T_14 = eq(_T_11, UInt<1>("h0")) @[FixedPointSpec.scala 109:9]
      when _T_14 : @[FixedPointSpec.scala 109:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at FixedPointSpec.scala:109 assert(Mux(false.B, largeWidthLowPrecision, unknownFixed) === 0.25.F(2.BP))\n") : printf_2 @[FixedPointSpec.scala 109:9]
    node _T_15 = mux(UInt<1>("h1"), asFixedPoint(UInt<4>("h6"), 0), asFixedPoint(UInt<2>("h1"), 2)) @[FixedPointSpec.scala 110:13]
    node _T_16 = eq(_T_15, asFixedPoint(UInt<4>("h6"), 0)) @[FixedPointSpec.scala 110:73]
    node _T_17 = bits(reset, 0, 0) @[FixedPointSpec.scala 110:9]
    node _T_18 = eq(_T_17, UInt<1>("h0")) @[FixedPointSpec.scala 110:9]
    when _T_18 : @[FixedPointSpec.scala 110:9]
      assert(clock, _T_16, UInt<1>("h1"), "") : assert_3 @[FixedPointSpec.scala 110:9]
      node _T_19 = eq(_T_16, UInt<1>("h0")) @[FixedPointSpec.scala 110:9]
      when _T_19 : @[FixedPointSpec.scala 110:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at FixedPointSpec.scala:110 assert(Mux(true.B, unknownWidthLowPrecision, smallWidthHighPrecision) === 6.0.F(0.BP))\n") : printf_3 @[FixedPointSpec.scala 110:9]
    node _T_20 = bits(reset, 0, 0) @[FixedPointSpec.scala 112:7]
    node _T_21 = eq(_T_20, UInt<1>("h0")) @[FixedPointSpec.scala 112:7]
    when _T_21 : @[FixedPointSpec.scala 112:7]
      stop(clock, UInt<1>("h1"), 0) : stop @[FixedPointSpec.scala 112:7]
