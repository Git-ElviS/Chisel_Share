circuit ParameterizedAggregateOneHotTester :
  module ParameterizedAggregateOneHot :
    input clock : Clock
    input reset : Reset
    output io : { flip selectors : UInt<1>[4], out : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}

    wire values_0 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 148:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 149:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h0"), 3) @[OneHotMuxSpec.scala 150:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h0"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_1 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h4"), 4) @[OneHotMuxSpec.scala 148:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 149:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h6"), 3) @[OneHotMuxSpec.scala 150:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h20"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_2 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 148:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h10"), 4) @[OneHotMuxSpec.scala 149:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("hc"), 3) @[OneHotMuxSpec.scala 150:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h40"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_3 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("hc"), 4) @[OneHotMuxSpec.scala 148:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h18"), 4) @[OneHotMuxSpec.scala 149:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h12"), 3) @[OneHotMuxSpec.scala 150:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h60"), 5) @[OneHotMuxSpec.scala 151:12]
    wire _io_out_WIRE : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:73]
    wire _io_out_WIRE_1 : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:73]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:73]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:73]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:73]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:73]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:73]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:73]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:73]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:73]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:73]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:73]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:73]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:73]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:73]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:73]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:73]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:73]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:73]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:73]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:73]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:73]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:73]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:73]
    _io_out_WIRE.a <= _io_out_WIRE_1 @[Mux.scala 27:73]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:73]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:73]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:73]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:73]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:73]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:73]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:73]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:73]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:73]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:73]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:73]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:73]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:73]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:73]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:73]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:73]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:73]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:73]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:73]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:73]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:73]
    _io_out_WIRE.v <= _io_out_WIRE_4 @[Mux.scala 27:73]
    io.out <= _io_out_WIRE @[OneHotMuxSpec.scala 211:10]

  module ParameterizedAggregateOneHot_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip selectors : UInt<1>[4], out : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}

    wire values_0 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 148:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 149:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h0"), 3) @[OneHotMuxSpec.scala 150:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h0"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_1 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h4"), 4) @[OneHotMuxSpec.scala 148:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 149:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h6"), 3) @[OneHotMuxSpec.scala 150:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h20"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_2 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 148:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h10"), 4) @[OneHotMuxSpec.scala 149:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("hc"), 3) @[OneHotMuxSpec.scala 150:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h40"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_3 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("hc"), 4) @[OneHotMuxSpec.scala 148:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h18"), 4) @[OneHotMuxSpec.scala 149:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h12"), 3) @[OneHotMuxSpec.scala 150:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h60"), 5) @[OneHotMuxSpec.scala 151:12]
    wire _io_out_WIRE : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:73]
    wire _io_out_WIRE_1 : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:73]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:73]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:73]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:73]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:73]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:73]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:73]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:73]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:73]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:73]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:73]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:73]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:73]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:73]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:73]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:73]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:73]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:73]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:73]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:73]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:73]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:73]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:73]
    _io_out_WIRE.a <= _io_out_WIRE_1 @[Mux.scala 27:73]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:73]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:73]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:73]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:73]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:73]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:73]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:73]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:73]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:73]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:73]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:73]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:73]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:73]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:73]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:73]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:73]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:73]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:73]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:73]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:73]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:73]
    _io_out_WIRE.v <= _io_out_WIRE_4 @[Mux.scala 27:73]
    io.out <= _io_out_WIRE @[OneHotMuxSpec.scala 211:10]

  module ParameterizedAggregateOneHot_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip selectors : UInt<1>[4], out : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}

    wire values_0 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 148:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 149:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h0"), 3) @[OneHotMuxSpec.scala 150:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h0"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_1 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h4"), 4) @[OneHotMuxSpec.scala 148:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 149:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h6"), 3) @[OneHotMuxSpec.scala 150:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h20"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_2 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 148:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h10"), 4) @[OneHotMuxSpec.scala 149:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("hc"), 3) @[OneHotMuxSpec.scala 150:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h40"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_3 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("hc"), 4) @[OneHotMuxSpec.scala 148:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h18"), 4) @[OneHotMuxSpec.scala 149:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h12"), 3) @[OneHotMuxSpec.scala 150:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h60"), 5) @[OneHotMuxSpec.scala 151:12]
    wire _io_out_WIRE : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:73]
    wire _io_out_WIRE_1 : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:73]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:73]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:73]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:73]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:73]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:73]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:73]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:73]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:73]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:73]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:73]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:73]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:73]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:73]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:73]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:73]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:73]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:73]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:73]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:73]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:73]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:73]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:73]
    _io_out_WIRE.a <= _io_out_WIRE_1 @[Mux.scala 27:73]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:73]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:73]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:73]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:73]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:73]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:73]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:73]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:73]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:73]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:73]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:73]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:73]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:73]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:73]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:73]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:73]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:73]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:73]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:73]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:73]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:73]
    _io_out_WIRE.v <= _io_out_WIRE_4 @[Mux.scala 27:73]
    io.out <= _io_out_WIRE @[OneHotMuxSpec.scala 211:10]

  module ParameterizedAggregateOneHot_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip selectors : UInt<1>[4], out : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}

    wire values_0 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 148:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 149:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h0"), 3) @[OneHotMuxSpec.scala 150:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h0"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_1 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h4"), 4) @[OneHotMuxSpec.scala 148:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 149:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h6"), 3) @[OneHotMuxSpec.scala 150:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h20"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_2 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 148:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h10"), 4) @[OneHotMuxSpec.scala 149:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("hc"), 3) @[OneHotMuxSpec.scala 150:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h40"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_3 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("hc"), 4) @[OneHotMuxSpec.scala 148:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h18"), 4) @[OneHotMuxSpec.scala 149:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h12"), 3) @[OneHotMuxSpec.scala 150:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h60"), 5) @[OneHotMuxSpec.scala 151:12]
    wire _io_out_WIRE : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:73]
    wire _io_out_WIRE_1 : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:73]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:73]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:73]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:73]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:73]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:73]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:73]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:73]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:73]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:73]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:73]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:73]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:73]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:73]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:73]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:73]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:73]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:73]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:73]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:73]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:73]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:73]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:73]
    _io_out_WIRE.a <= _io_out_WIRE_1 @[Mux.scala 27:73]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:73]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:73]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:73]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:73]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:73]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:73]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:73]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:73]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:73]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:73]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:73]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:73]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:73]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:73]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:73]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h0")) @[Mux.scala 27:73]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:73]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:73]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:73]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:73]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:73]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:73]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:73]
    _io_out_WIRE.v <= _io_out_WIRE_4 @[Mux.scala 27:73]
    io.out <= _io_out_WIRE @[OneHotMuxSpec.scala 211:10]

  module ParameterizedAggregateOneHotTester :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    wire values_0 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 148:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h0"), 4) @[OneHotMuxSpec.scala 149:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h0"), 3) @[OneHotMuxSpec.scala 150:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h0"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_1 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h4"), 4) @[OneHotMuxSpec.scala 148:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 149:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h6"), 3) @[OneHotMuxSpec.scala 150:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h20"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_2 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h8"), 4) @[OneHotMuxSpec.scala 148:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h10"), 4) @[OneHotMuxSpec.scala 149:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("hc"), 3) @[OneHotMuxSpec.scala 150:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h40"), 5) @[OneHotMuxSpec.scala 151:12]
    wire values_3 : { v : Fixed<8><<4>>[2], a : { f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 147:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("hc"), 4) @[OneHotMuxSpec.scala 148:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h18"), 4) @[OneHotMuxSpec.scala 149:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h12"), 3) @[OneHotMuxSpec.scala 150:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h60"), 5) @[OneHotMuxSpec.scala 151:12]
    inst dut of ParameterizedAggregateOneHot @[OneHotMuxSpec.scala 180:21]
    dut.clock <= clock
    dut.reset <= reset
    dut.io.selectors[0] <= UInt<1>("h1") @[OneHotMuxSpec.scala 181:22]
    dut.io.selectors[1] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut.io.selectors[2] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut.io.selectors[3] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    node _T = asUInt(dut.io.out.a.f2) @[OneHotMuxSpec.scala 183:29]
    node _T_1 = asUInt(dut.io.out.a.f1) @[OneHotMuxSpec.scala 183:29]
    node _T_2 = asUInt(dut.io.out.v[0]) @[OneHotMuxSpec.scala 183:29]
    node _T_3 = asUInt(dut.io.out.v[1]) @[OneHotMuxSpec.scala 183:29]
    node lo = cat(_T_1, _T) @[OneHotMuxSpec.scala 183:29]
    node hi = cat(_T_3, _T_2) @[OneHotMuxSpec.scala 183:29]
    node _T_4 = cat(hi, lo) @[OneHotMuxSpec.scala 183:29]
    node _T_5 = asUInt(values_0.a.f2) @[OneHotMuxSpec.scala 183:52]
    node _T_6 = asUInt(values_0.a.f1) @[OneHotMuxSpec.scala 183:52]
    node _T_7 = asUInt(values_0.v[0]) @[OneHotMuxSpec.scala 183:52]
    node _T_8 = asUInt(values_0.v[1]) @[OneHotMuxSpec.scala 183:52]
    node lo_1 = cat(_T_6, _T_5) @[OneHotMuxSpec.scala 183:52]
    node hi_1 = cat(_T_8, _T_7) @[OneHotMuxSpec.scala 183:52]
    node _T_9 = cat(hi_1, lo_1) @[OneHotMuxSpec.scala 183:52]
    node _T_10 = eq(_T_4, _T_9) @[OneHotMuxSpec.scala 183:32]
    node _T_11 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 183:11]
    node _T_12 = eq(_T_11, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
    when _T_12 : @[OneHotMuxSpec.scala 183:11]
      assert(clock, _T_10, UInt<1>("h1"), "") : assert @[OneHotMuxSpec.scala 183:11]
      node _T_13 = eq(_T_10, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
      when _T_13 : @[OneHotMuxSpec.scala 183:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at OneHotMuxSpec.scala:183 assert(dut.io.out.asUInt() === values(i).asUInt())\n") : printf @[OneHotMuxSpec.scala 183:11]
    inst dut_1 of ParameterizedAggregateOneHot_1 @[OneHotMuxSpec.scala 180:21]
    dut_1.clock <= clock
    dut_1.reset <= reset
    dut_1.io.selectors[0] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_1.io.selectors[1] <= UInt<1>("h1") @[OneHotMuxSpec.scala 181:22]
    dut_1.io.selectors[2] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_1.io.selectors[3] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    node _T_14 = asUInt(dut_1.io.out.a.f2) @[OneHotMuxSpec.scala 183:29]
    node _T_15 = asUInt(dut_1.io.out.a.f1) @[OneHotMuxSpec.scala 183:29]
    node _T_16 = asUInt(dut_1.io.out.v[0]) @[OneHotMuxSpec.scala 183:29]
    node _T_17 = asUInt(dut_1.io.out.v[1]) @[OneHotMuxSpec.scala 183:29]
    node lo_2 = cat(_T_15, _T_14) @[OneHotMuxSpec.scala 183:29]
    node hi_2 = cat(_T_17, _T_16) @[OneHotMuxSpec.scala 183:29]
    node _T_18 = cat(hi_2, lo_2) @[OneHotMuxSpec.scala 183:29]
    node _T_19 = asUInt(values_1.a.f2) @[OneHotMuxSpec.scala 183:52]
    node _T_20 = asUInt(values_1.a.f1) @[OneHotMuxSpec.scala 183:52]
    node _T_21 = asUInt(values_1.v[0]) @[OneHotMuxSpec.scala 183:52]
    node _T_22 = asUInt(values_1.v[1]) @[OneHotMuxSpec.scala 183:52]
    node lo_3 = cat(_T_20, _T_19) @[OneHotMuxSpec.scala 183:52]
    node hi_3 = cat(_T_22, _T_21) @[OneHotMuxSpec.scala 183:52]
    node _T_23 = cat(hi_3, lo_3) @[OneHotMuxSpec.scala 183:52]
    node _T_24 = eq(_T_18, _T_23) @[OneHotMuxSpec.scala 183:32]
    node _T_25 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 183:11]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
    when _T_26 : @[OneHotMuxSpec.scala 183:11]
      assert(clock, _T_24, UInt<1>("h1"), "") : assert_1 @[OneHotMuxSpec.scala 183:11]
      node _T_27 = eq(_T_24, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
      when _T_27 : @[OneHotMuxSpec.scala 183:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at OneHotMuxSpec.scala:183 assert(dut.io.out.asUInt() === values(i).asUInt())\n") : printf_1 @[OneHotMuxSpec.scala 183:11]
    inst dut_2 of ParameterizedAggregateOneHot_2 @[OneHotMuxSpec.scala 180:21]
    dut_2.clock <= clock
    dut_2.reset <= reset
    dut_2.io.selectors[0] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_2.io.selectors[1] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_2.io.selectors[2] <= UInt<1>("h1") @[OneHotMuxSpec.scala 181:22]
    dut_2.io.selectors[3] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    node _T_28 = asUInt(dut_2.io.out.a.f2) @[OneHotMuxSpec.scala 183:29]
    node _T_29 = asUInt(dut_2.io.out.a.f1) @[OneHotMuxSpec.scala 183:29]
    node _T_30 = asUInt(dut_2.io.out.v[0]) @[OneHotMuxSpec.scala 183:29]
    node _T_31 = asUInt(dut_2.io.out.v[1]) @[OneHotMuxSpec.scala 183:29]
    node lo_4 = cat(_T_29, _T_28) @[OneHotMuxSpec.scala 183:29]
    node hi_4 = cat(_T_31, _T_30) @[OneHotMuxSpec.scala 183:29]
    node _T_32 = cat(hi_4, lo_4) @[OneHotMuxSpec.scala 183:29]
    node _T_33 = asUInt(values_2.a.f2) @[OneHotMuxSpec.scala 183:52]
    node _T_34 = asUInt(values_2.a.f1) @[OneHotMuxSpec.scala 183:52]
    node _T_35 = asUInt(values_2.v[0]) @[OneHotMuxSpec.scala 183:52]
    node _T_36 = asUInt(values_2.v[1]) @[OneHotMuxSpec.scala 183:52]
    node lo_5 = cat(_T_34, _T_33) @[OneHotMuxSpec.scala 183:52]
    node hi_5 = cat(_T_36, _T_35) @[OneHotMuxSpec.scala 183:52]
    node _T_37 = cat(hi_5, lo_5) @[OneHotMuxSpec.scala 183:52]
    node _T_38 = eq(_T_32, _T_37) @[OneHotMuxSpec.scala 183:32]
    node _T_39 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 183:11]
    node _T_40 = eq(_T_39, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
    when _T_40 : @[OneHotMuxSpec.scala 183:11]
      assert(clock, _T_38, UInt<1>("h1"), "") : assert_2 @[OneHotMuxSpec.scala 183:11]
      node _T_41 = eq(_T_38, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
      when _T_41 : @[OneHotMuxSpec.scala 183:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at OneHotMuxSpec.scala:183 assert(dut.io.out.asUInt() === values(i).asUInt())\n") : printf_2 @[OneHotMuxSpec.scala 183:11]
    inst dut_3 of ParameterizedAggregateOneHot_3 @[OneHotMuxSpec.scala 180:21]
    dut_3.clock <= clock
    dut_3.reset <= reset
    dut_3.io.selectors[0] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_3.io.selectors[1] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_3.io.selectors[2] <= UInt<1>("h0") @[OneHotMuxSpec.scala 181:22]
    dut_3.io.selectors[3] <= UInt<1>("h1") @[OneHotMuxSpec.scala 181:22]
    node _T_42 = asUInt(dut_3.io.out.a.f2) @[OneHotMuxSpec.scala 183:29]
    node _T_43 = asUInt(dut_3.io.out.a.f1) @[OneHotMuxSpec.scala 183:29]
    node _T_44 = asUInt(dut_3.io.out.v[0]) @[OneHotMuxSpec.scala 183:29]
    node _T_45 = asUInt(dut_3.io.out.v[1]) @[OneHotMuxSpec.scala 183:29]
    node lo_6 = cat(_T_43, _T_42) @[OneHotMuxSpec.scala 183:29]
    node hi_6 = cat(_T_45, _T_44) @[OneHotMuxSpec.scala 183:29]
    node _T_46 = cat(hi_6, lo_6) @[OneHotMuxSpec.scala 183:29]
    node _T_47 = asUInt(values_3.a.f2) @[OneHotMuxSpec.scala 183:52]
    node _T_48 = asUInt(values_3.a.f1) @[OneHotMuxSpec.scala 183:52]
    node _T_49 = asUInt(values_3.v[0]) @[OneHotMuxSpec.scala 183:52]
    node _T_50 = asUInt(values_3.v[1]) @[OneHotMuxSpec.scala 183:52]
    node lo_7 = cat(_T_48, _T_47) @[OneHotMuxSpec.scala 183:52]
    node hi_7 = cat(_T_50, _T_49) @[OneHotMuxSpec.scala 183:52]
    node _T_51 = cat(hi_7, lo_7) @[OneHotMuxSpec.scala 183:52]
    node _T_52 = eq(_T_46, _T_51) @[OneHotMuxSpec.scala 183:32]
    node _T_53 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 183:11]
    node _T_54 = eq(_T_53, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
    when _T_54 : @[OneHotMuxSpec.scala 183:11]
      assert(clock, _T_52, UInt<1>("h1"), "") : assert_3 @[OneHotMuxSpec.scala 183:11]
      node _T_55 = eq(_T_52, UInt<1>("h0")) @[OneHotMuxSpec.scala 183:11]
      when _T_55 : @[OneHotMuxSpec.scala 183:11]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at OneHotMuxSpec.scala:183 assert(dut.io.out.asUInt() === values(i).asUInt())\n") : printf_3 @[OneHotMuxSpec.scala 183:11]
    node _T_56 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 186:7]
    node _T_57 = eq(_T_56, UInt<1>("h0")) @[OneHotMuxSpec.scala 186:7]
    when _T_57 : @[OneHotMuxSpec.scala 186:7]
      stop(clock, UInt<1>("h1"), 0) : stop @[OneHotMuxSpec.scala 186:7]
