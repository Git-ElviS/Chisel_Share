circuit AsTypeOfVecTester :
  module AsTypeOfVecTester :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    wire vec : SInt<4>[4] @[AsTypeOfTester.scala 46:69]
    node _vec_T = asSInt(UInt<4>("h2")) @[AsTypeOfTester.scala 46:69]
    vec[0] <= _vec_T @[AsTypeOfTester.scala 46:69]
    node _vec_T_1 = asSInt(UInt<4>("h1")) @[AsTypeOfTester.scala 46:69]
    vec[1] <= _vec_T_1 @[AsTypeOfTester.scala 46:69]
    node _vec_T_2 = asSInt(UInt<4>("h0")) @[AsTypeOfTester.scala 46:69]
    vec[2] <= _vec_T_2 @[AsTypeOfTester.scala 46:69]
    node _vec_T_3 = asSInt(UInt<4>("hf")) @[AsTypeOfTester.scala 46:69]
    vec[3] <= _vec_T_3 @[AsTypeOfTester.scala 46:69]
    node _T = eq(vec[0], asSInt(UInt<3>("h2"))) @[AsTypeOfTester.scala 48:17]
    node _T_1 = bits(reset, 0, 0) @[AsTypeOfTester.scala 48:9]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[AsTypeOfTester.scala 48:9]
    when _T_2 : @[AsTypeOfTester.scala 48:9]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[AsTypeOfTester.scala 48:9]
      node _T_3 = eq(_T, UInt<1>("h0")) @[AsTypeOfTester.scala 48:9]
      when _T_3 : @[AsTypeOfTester.scala 48:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at AsTypeOfTester.scala:48 assert(vec(0) === 2.S)\n") : printf @[AsTypeOfTester.scala 48:9]
    node _T_4 = eq(vec[1], asSInt(UInt<2>("h1"))) @[AsTypeOfTester.scala 49:17]
    node _T_5 = bits(reset, 0, 0) @[AsTypeOfTester.scala 49:9]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[AsTypeOfTester.scala 49:9]
    when _T_6 : @[AsTypeOfTester.scala 49:9]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[AsTypeOfTester.scala 49:9]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[AsTypeOfTester.scala 49:9]
      when _T_7 : @[AsTypeOfTester.scala 49:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at AsTypeOfTester.scala:49 assert(vec(1) === 1.S)\n") : printf_1 @[AsTypeOfTester.scala 49:9]
    node _T_8 = eq(vec[2], asSInt(UInt<1>("h0"))) @[AsTypeOfTester.scala 50:17]
    node _T_9 = bits(reset, 0, 0) @[AsTypeOfTester.scala 50:9]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[AsTypeOfTester.scala 50:9]
    when _T_10 : @[AsTypeOfTester.scala 50:9]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[AsTypeOfTester.scala 50:9]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[AsTypeOfTester.scala 50:9]
      when _T_11 : @[AsTypeOfTester.scala 50:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at AsTypeOfTester.scala:50 assert(vec(2) === 0.S)\n") : printf_2 @[AsTypeOfTester.scala 50:9]
    node _T_12 = eq(vec[3], asSInt(UInt<1>("h1"))) @[AsTypeOfTester.scala 51:17]
    node _T_13 = bits(reset, 0, 0) @[AsTypeOfTester.scala 51:9]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[AsTypeOfTester.scala 51:9]
    when _T_14 : @[AsTypeOfTester.scala 51:9]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[AsTypeOfTester.scala 51:9]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[AsTypeOfTester.scala 51:9]
      when _T_15 : @[AsTypeOfTester.scala 51:9]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at AsTypeOfTester.scala:51 assert(vec(3) === -1.S)\n") : printf_3 @[AsTypeOfTester.scala 51:9]
    node _T_16 = bits(reset, 0, 0) @[AsTypeOfTester.scala 53:7]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[AsTypeOfTester.scala 53:7]
    when _T_17 : @[AsTypeOfTester.scala 53:7]
      stop(clock, UInt<1>("h1"), 0) : stop @[AsTypeOfTester.scala 53:7]
