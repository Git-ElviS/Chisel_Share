circuit LitInsideOutsideTester :
  module LitInsideOutsideTester :
    input clock : Clock
    input reset : UInt<1>
    output io : { }

    node _T = eq(asSInt(UInt<4>("h7")), asSInt(UInt<4>("h7"))) @[LiteralExtractorSpec.scala 121:39]
    node _T_1 = bits(reset, 0, 0) @[LiteralExtractorSpec.scala 121:21]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[LiteralExtractorSpec.scala 121:21]
    when _T_2 : @[LiteralExtractorSpec.scala 121:21]
      assert(clock, _T, UInt<1>("h1"), "") : assert @[LiteralExtractorSpec.scala 121:21]
      node _T_3 = eq(_T, UInt<1>("h0")) @[LiteralExtractorSpec.scala 121:21]
      when _T_3 : @[LiteralExtractorSpec.scala 121:21]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at LiteralExtractorSpec.scala:121 chisel3.assert(outsideLiteral.x === insideLiteral.x)\n") : printf @[LiteralExtractorSpec.scala 121:21]
    node _T_4 = eq(asFixedPoint(UInt<8>("h62"), 4), asFixedPoint(UInt<8>("h62"), 4)) @[LiteralExtractorSpec.scala 122:39]
    node _T_5 = bits(reset, 0, 0) @[LiteralExtractorSpec.scala 122:21]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[LiteralExtractorSpec.scala 122:21]
    when _T_6 : @[LiteralExtractorSpec.scala 122:21]
      assert(clock, _T_4, UInt<1>("h1"), "") : assert_1 @[LiteralExtractorSpec.scala 122:21]
      node _T_7 = eq(_T_4, UInt<1>("h0")) @[LiteralExtractorSpec.scala 122:21]
      when _T_7 : @[LiteralExtractorSpec.scala 122:21]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at LiteralExtractorSpec.scala:122 chisel3.assert(outsideLiteral.y === insideLiteral.y)\n") : printf_1 @[LiteralExtractorSpec.scala 122:21]
    node _T_8 = eq(asSInt(UInt<4>("h7")), asSInt(UInt<4>("h7"))) @[LiteralExtractorSpec.scala 123:39]
    node _T_9 = bits(reset, 0, 0) @[LiteralExtractorSpec.scala 123:21]
    node _T_10 = eq(_T_9, UInt<1>("h0")) @[LiteralExtractorSpec.scala 123:21]
    when _T_10 : @[LiteralExtractorSpec.scala 123:21]
      assert(clock, _T_8, UInt<1>("h1"), "") : assert_2 @[LiteralExtractorSpec.scala 123:21]
      node _T_11 = eq(_T_8, UInt<1>("h0")) @[LiteralExtractorSpec.scala 123:21]
      when _T_11 : @[LiteralExtractorSpec.scala 123:21]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at LiteralExtractorSpec.scala:123 chisel3.assert(outsideLiteral.x === 7.S)\n") : printf_2 @[LiteralExtractorSpec.scala 123:21]
    node _T_12 = eq(asFixedPoint(UInt<8>("h62"), 4), asFixedPoint(UInt<8>("h62"), 4)) @[LiteralExtractorSpec.scala 124:39]
    node _T_13 = bits(reset, 0, 0) @[LiteralExtractorSpec.scala 124:21]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[LiteralExtractorSpec.scala 124:21]
    when _T_14 : @[LiteralExtractorSpec.scala 124:21]
      assert(clock, _T_12, UInt<1>("h1"), "") : assert_3 @[LiteralExtractorSpec.scala 124:21]
      node _T_15 = eq(_T_12, UInt<1>("h0")) @[LiteralExtractorSpec.scala 124:21]
      when _T_15 : @[LiteralExtractorSpec.scala 124:21]
        printf(clock, UInt<1>("h1"), "Assertion failed\n    at LiteralExtractorSpec.scala:124 chisel3.assert(outsideLiteral.y === 6.125.F(4.BP))\n") : printf_3 @[LiteralExtractorSpec.scala 124:21]
    node _T_16 = bits(reset, 0, 0) @[LiteralExtractorSpec.scala 126:11]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[LiteralExtractorSpec.scala 126:11]
    when _T_17 : @[LiteralExtractorSpec.scala 126:11]
      stop(clock, UInt<1>("h1"), 0) : stop @[LiteralExtractorSpec.scala 126:11]
